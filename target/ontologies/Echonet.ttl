
@prefix ns: <http://ontology.universAAL.org/Echonet.owl#> .
@prefix pvn: <http://ontology.universAAL.org/uAAL.owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix : <http://www.w3.org/2002/07/owl#> .
<http://ontology.universAAL.org/Echonet.owl> rdfs:comment "The collection of ECHONET Ontology"^^xsd:string ;
  a :Ontology ;
  rdfs:label "Echonet"^^xsd:string .
ns:ElectricGate rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ElectricGate"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFaultDescription
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:FaultDescriptionValue ;
      :onProperty ns:hasFaultDescription
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationTimeSettingValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasOperationTimeSettingValue
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpeningClosingOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasOpeningClosingOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDegreeOfOpeningLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasDegreeOfOpeningLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpeningClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOpeningClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasElectricLockSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasElectricLockSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemoteOperationSettingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasRemoteOperationSettingStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSelectiveOpeningOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:SelectiveOpeningOperationSettingValue ;
      :onProperty ns:hasSelectiveOpeningOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOneTimeOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOneTimeOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOneTimeClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOneTimeClosingSpeedSetting
    ] .
ns:hasSelectiveOpeningOperationSetting rdfs:domain ns:ElectricGate ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpeningSpeedSetting rdfs:domain ns:ElectricGate ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRemoteOperationSettingStatus rdfs:domain ns:ElectricGate ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOneTimeOpeningSpeedSetting rdfs:domain ns:ElectricGate ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasClosingSpeedSetting rdfs:domain ns:ElectricGate ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpenCloseStatus rdfs:domain ns:ElectricGate ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpeningClosingOperationSetting rdfs:domain ns:ElectricGate ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOperationTimeSettingValue rdfs:domain ns:ElectricGate ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDegreeOfOpeningLevel rdfs:domain ns:ElectricGate ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasElectricLockSetting rdfs:domain ns:ElectricGate ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOneTimeClosingSpeedSetting rdfs:domain ns:ElectricGate ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFaultDescription rdfs:domain ns:ElectricGate ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpeningClosingSpeedSetting rdfs:domain ns:ElectricGate ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:ElectricHotWaterPot rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ElectricHotWaterPot"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCoverOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasCoverOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNoWaterWarning
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasNoWaterWarning
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBoilUpSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasBoilUpSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBoilUpWarmerModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasBoilUpWarmerModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWarmerTemperatureSettingValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasWarmerTemperatureSettingValue
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHotWaterDischargeStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasHotWaterDischargeStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLockStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasLockStatus
    ] .
ns:hasWarmerTemperatureSettingValue rdfs:domain ns:ElectricHotWaterPot ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasLockStatus rdfs:domain ns:ElectricHotWaterPot ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBoilUpSetting rdfs:domain ns:ElectricHotWaterPot ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBoilUpWarmerModeSetting rdfs:domain ns:ElectricHotWaterPot ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasNoWaterWarning rdfs:domain ns:ElectricHotWaterPot ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCoverOpenCloseStatus rdfs:domain ns:ElectricHotWaterPot ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasHotWaterDischargeStatus rdfs:domain ns:ElectricHotWaterPot ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:FloorHeater rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "FloorHeater"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTemperatureSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasTemperatureSetting1
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTemperatureSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasTemperatureSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredRoomTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasMeasuredRoomTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredFloorTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasMeasuredFloorTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasZoneChangeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasZoneChangeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSpecialOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasSpecialOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDailyTimerSettingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasDailyTimerSettingStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDailyTimerSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDailyTimerSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDailyTimerSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDailyTimerSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOffTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOffTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOffTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOffTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOffTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOffTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousPowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredInstantaneousPowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativePowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredCumulativePowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedPowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedPowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerConsumptionMeasurementMethod
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:MeasurementMethodValue ;
      :onProperty ns:hasPowerConsumptionMeasurementMethod
    ] .
ns:hasOffTimerReservationSetting rdfs:domain ns:FloorHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasPowerConsumptionMeasurementMethod rdfs:domain ns:FloorHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousPowerConsumption rdfs:domain ns:FloorHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDailyTimerSettingStatus rdfs:domain ns:FloorHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSpecialOperationSetting rdfs:domain ns:FloorHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOffTimerSettingRelativeTime rdfs:domain ns:FloorHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativePowerConsumption rdfs:domain ns:FloorHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDailyTimerSetting2 rdfs:domain ns:FloorHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerSettingTime rdfs:domain ns:FloorHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDailyTimerSetting1 rdfs:domain ns:FloorHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOffTimerSettingTime rdfs:domain ns:FloorHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTemperatureSetting2 rdfs:domain ns:FloorHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasZoneChangeSetting rdfs:domain ns:FloorHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTemperatureSetting1 rdfs:domain ns:FloorHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredRoomTemperature rdfs:domain ns:FloorHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOnTimerReservationSetting rdfs:domain ns:FloorHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOnTimerSettingRelativeTime rdfs:domain ns:FloorHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedPowerConsumption rdfs:domain ns:FloorHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredFloorTemperature rdfs:domain ns:FloorHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:PackageTypeCommercialAirConditionerOutdoorUnit rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "PackageTypeCommercialAirconditionerOutdoorUnit"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredOutdoorUnitTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredOutdoorUnitTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOutDoorUnitRatedPowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasOutDoorUnitRatedPowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredOutdoorUnitPowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredOutdoorUnitPowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSpecialState
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasSpecialState
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasGroupInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasGroupInformation
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPossiblePowerSavingForOutdoorUnit
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasPossiblePowerSavingForOutdoorUnit
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSettingRestrictingPowerConsumptionForOutdoorUnit
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasSettingRestrictingPowerConsumptionForOutdoorUnit
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumPowerConsumptionForRestrictedOutdoorUnit
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMinimumPowerConsumptionForRestrictedOutdoorUnit
    ] .
ns:hasPossiblePowerSavingForOutdoorUnit rdfs:domain ns:PackageTypeCommercialAirConditionerOutdoorUnit ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredOutdoorUnitPowerConsumption rdfs:domain ns:PackageTypeCommercialAirConditionerOutdoorUnit ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredOutdoorUnitTemperature rdfs:domain ns:PackageTypeCommercialAirConditionerOutdoorUnit ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMinimumPowerConsumptionForRestrictedOutdoorUnit rdfs:domain ns:PackageTypeCommercialAirConditionerOutdoorUnit ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOutDoorUnitRatedPowerConsumption rdfs:domain ns:PackageTypeCommercialAirConditionerOutdoorUnit ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasGroupInformation rdfs:domain ns:PackageTypeCommercialAirConditionerOutdoorUnit ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSpecialState rdfs:domain ns:PackageTypeCommercialAirConditionerOutdoorUnit ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSettingRestrictingPowerConsumptionForOutdoorUnit rdfs:domain ns:PackageTypeCommercialAirConditionerOutdoorUnit ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:FirstAidSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "FirstAidSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFirstAidOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasFirstAidOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetFirstAidOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:FirstAidSensor ;
      :onProperty ns:resetFirstAidOccurenceStatus
    ] .
ns:hasDectectionThresholdLevel rdfs:domain ns:FirstAidSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFirstAidOccurenceStatus rdfs:domain ns:FirstAidSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:resetFirstAidOccurenceStatus rdfs:domain ns:FirstAidSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:InstantaneousWaterHeater rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "InstantaneousWaterHeater"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHotWaterHeatingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasHotWaterHeatingStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHotWaterTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasHotWaterTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHotWaterWarmerSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasHotWaterWarmerSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDurationOfAutomaticOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDurationOfAutomaticOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemainingAutomaticOperationTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRemainingAutomaticOperationTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasBathTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathWaterHeaterStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasBathWaterHeaterStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathAutoModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasBathAutoModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathAdditionalBoilUpOpeartionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasBathAdditionalBoilUpOpeartionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathHotWaterAddingOpeartionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasBathHotWaterAddingOpeartionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathWaterLoweringOpeartionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasBathWaterLoweringOpeartionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathWaterVolumeSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasBathWaterVolumeSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathWaterVolumeSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasBathWaterVolumeSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathWaterVolumeSetting3
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasBathWaterVolumeSetting3
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathWaterVolumeSetting4
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasBathWaterVolumeSetting4
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathWaterVolumeSetting4MaximumSettableLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasBathWaterVolumeSetting4MaximumSettableLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathroomPrioritySetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasBathroomPrioritySetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasShowerHotWaterSupplyStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasShowerHotWaterSupplyStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasKitchenHotWaterSupplyStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasKitchenHotWaterSupplyStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterWarmerOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasWaterWarmerOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterWarmerOnTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasWaterWarmerOnTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathOperationStatusMonitor
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasBathOperationStatusMonitor
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVolumeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasVolumeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMuteSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasMuteSetting
    ] .
ns:hasHotWaterWarmerSetting rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasVolumeSetting rdfs:domain ns:InstantaneousWaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerSettingTime rdfs:domain ns:InstantaneousWaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBathWaterVolumeSetting4MaximumSettableLevel rdfs:domain ns:InstantaneousWaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBathWaterVolumeSetting1 rdfs:domain ns:InstantaneousWaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMuteSetting rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasHotWaterHeatingStatus rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBathWaterVolumeSetting2 rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasShowerHotWaterSupplyStatus rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDurationOfAutomaticOperationSetting rdfs:domain ns:InstantaneousWaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBathWaterVolumeSetting3 rdfs:domain ns:InstantaneousWaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBathWaterVolumeSetting4 rdfs:domain ns:InstantaneousWaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerSettingRelativeTime rdfs:domain ns:InstantaneousWaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBathAdditionalBoilUpOpeartionSetting rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBathAutoModeSetting rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBathOperationStatusMonitor rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBathroomPrioritySetting rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasKitchenHotWaterSupplyStatus rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBathWaterLoweringOpeartionSetting rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasWaterWarmerOnTimerSettingTime rdfs:domain ns:InstantaneousWaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerReservationSetting rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRemainingAutomaticOperationTime rdfs:domain ns:InstantaneousWaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWaterWarmerOnTimerReservationSetting rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBathTemperatureSetting rdfs:domain ns:InstantaneousWaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHotWaterTemperatureSetting rdfs:domain ns:InstantaneousWaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBathWaterHeaterStatus rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBathHotWaterAddingOpeartionSetting rdfs:domain ns:InstantaneousWaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:OperationModeSettingValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "OperationModeSettingValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:normalMode
    ns:highSpeedMode
    ns:silentMode
    ns:standardMode
    ns:extraMode
    ns:automaticAirFlowDirectionControlMode
    ns:nonAutomaticAirFlowDirectionControlMode
    ns:automaticAirFlowVerticalDirectionMode
    ns:automaticAirFlowHorizontalDirectionMode
    ns:automaticMode
    ns:coolingMode
    ns:heatingMode
    ns:dehumidificationMode
    ns:ciculatorMode
    ns:other
    ns:throatDryPreventionMode
    ns:quietOperationMode
    ns:powerSavingMode
    ns:roomHeatingOnMode
    ns:roomHeatingOffMode
    ns:timerMode
    ns:noSetting
    ns:overCoolPreventionMode
    ns:ventilationMode
    ns:preWarmMode
    ns:noSetting
    ns:overCoolPreventionMode
    ns:modestOperationMode
    ns:highPowerOperationMode
    ns:rapidCharginMode
    ns:chargingMode
    ns:chargingMode
    ns:standbyMode
    ns:standbyMode
    ns:restartMode
    ns:recalculationMode
    ns:mainLightingMode
    ns:nightLightingMode
    ns:colorLightingMode
    ns:citricAcidCleaningMode
    ns:quickMode
    ns:microwaveHeatingMode
    ns:defrostingMode
    ns:ovenMode
    ns:grillMode
    ns:toasterMode
    ns:fermentingMode
    ns:stewingMode
    ns:steamingMode
    ns:twoStageMicrowaveHeatingMode
    ns:convectionMode
    ns:hybridMode
    ns:powerControlMode
    ns:deepFryingMode
    ns:waterHeatingMode
    ns:riceBoilingMode
    ns:stirFryingMode
    ns:washingMode
    ns:rinsingMode
    ns:spinDryingMode
    ns:suspendedMode
    ns:workingCycleStoppedCompletedMode
    ns:nonCoolingMode
    ns:continousMode
    ns:intermitentMode
  ) .
ns:toasterMode a ns:OperationModeSettingValue .
ns:waterHeatingMode a ns:OperationModeSettingValue .
ns:nightLightingMode a ns:OperationModeSettingValue .
ns:defrostingMode a ns:OperationModeSettingValue .
ns:ciculatorMode a ns:OperationModeSettingValue .
ns:ventilationMode a ns:OperationModeSettingValue .
ns:grillMode a ns:OperationModeSettingValue .
ns:quickMode a ns:OperationModeSettingValue .
ns:noSetting a ns:OperationModeSettingValue .
ns:mainLightingMode a ns:OperationModeSettingValue .
ns:standbyMode a ns:OperationModeSettingValue .
ns:rapidCharginMode a ns:OperationModeSettingValue .
ns:coolingMode a ns:OperationModeSettingValue .
ns:hybridMode a ns:OperationModeSettingValue .
ns:ovenMode a ns:OperationModeSettingValue .
ns:overCoolPreventionMode a ns:OperationModeSettingValue .
ns:nonCoolingMode a ns:OperationModeSettingValue .
ns:twoStageMicrowaveHeatingMode a ns:OperationModeSettingValue .
ns:roomHeatingOffMode a ns:OperationModeSettingValue .
ns:citricAcidCleaningMode a ns:OperationModeSettingValue .
ns:automaticAirFlowHorizontalDirectionMode a ns:OperationModeSettingValue .
ns:quietOperationMode a ns:OperationModeSettingValue .
ns:preWarmMode a ns:OperationModeSettingValue .
ns:fermentingMode a ns:OperationModeSettingValue .
ns:convectionMode a ns:OperationModeSettingValue .
ns:restartMode a ns:OperationModeSettingValue .
ns:suspendedMode a ns:OperationModeSettingValue .
ns:rinsingMode a ns:OperationModeSettingValue .
ns:heatingMode a ns:OperationModeSettingValue .
ns:intermitentMode a ns:OperationModeSettingValue .
ns:powerSavingMode a ns:OperationModeSettingValue .
ns:roomHeatingOnMode a ns:OperationModeSettingValue .
ns:riceBoilingMode a ns:OperationModeSettingValue .
ns:automaticAirFlowDirectionControlMode a ns:OperationModeSettingValue .
ns:spinDryingMode a ns:OperationModeSettingValue .
ns:highPowerOperationMode a ns:OperationModeSettingValue .
ns:nonAutomaticAirFlowDirectionControlMode a ns:OperationModeSettingValue .
ns:microwaveHeatingMode a ns:OperationModeSettingValue .
ns:automaticMode a ns:OperationModeSettingValue .
ns:stirFryingMode a ns:OperationModeSettingValue .
ns:other a ns:OperationModeSettingValue .
ns:highSpeedMode a ns:OperationModeSettingValue .
ns:colorLightingMode a ns:OperationModeSettingValue .
ns:timerMode a ns:OperationModeSettingValue .
ns:extraMode a ns:OperationModeSettingValue .
ns:chargingMode a ns:OperationModeSettingValue .
ns:throatDryPreventionMode a ns:OperationModeSettingValue .
ns:stewingMode a ns:OperationModeSettingValue .
ns:steamingMode a ns:OperationModeSettingValue .
ns:normalMode a ns:OperationModeSettingValue .
ns:dehumidificationMode a ns:OperationModeSettingValue .
ns:deepFryingMode a ns:OperationModeSettingValue .
ns:automaticAirFlowVerticalDirectionMode a ns:OperationModeSettingValue .
ns:continousMode a ns:OperationModeSettingValue .
ns:recalculationMode a ns:OperationModeSettingValue .
ns:workingCycleStoppedCompletedMode a ns:OperationModeSettingValue .
ns:powerControlMode a ns:OperationModeSettingValue .
ns:silentMode a ns:OperationModeSettingValue .
ns:modestOperationMode a ns:OperationModeSettingValue .
ns:washingMode a ns:OperationModeSettingValue .
ns:standardMode a ns:OperationModeSettingValue .
ns:HouseHoldSmallWindTurbinePowerGeneration rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "HouseHoldSmallWindTurbinePowerGeneration"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSystemInterconnectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasSystemInterconnectionStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeGeneratedElectricityAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeGeneratedElectricityAmount
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousGeneratedElectricityAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousGeneratedElectricityAmount
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetMeasuredCumulativeGeneratedElectricityAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:HouseHoldSmallWindTurbinePowerGeneration ;
      :onProperty ns:resetMeasuredCumulativeGeneratedElectricityAmount
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeSoldElectricityAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeSoldElectricityAmount
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetMeasuredCumulativeSoldElectricityAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:HouseHoldSmallWindTurbinePowerGeneration ;
      :onProperty ns:resetMeasuredCumulativeSoldElectricityAmount
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerGenerationOutputLimitSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasPowerGenerationOutputLimitSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerGenerationOutputLimitSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasPowerGenerationOutputLimitSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAmountOfElectricitySoldLimitSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasAmountOfElectricitySoldLimitSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedPower
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedPower
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredWindSpeed
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredWindSpeed
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedWindSpeed
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedWindSpeed
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCutInWindSpeed
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCutInWindSpeed
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCutOutWindSpeed
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCutOutWindSpeed
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasExtremeWindSpeed
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasExtremeWindSpeed
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBarkingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasBarkingStatus
    ] .
ns:resetMeasuredCumulativeSoldElectricityAmount rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeSoldElectricityAmount rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPowerGenerationOutputLimitSetting1 rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPowerGenerationOutputLimitSetting2 rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBarkingStatus rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAmountOfElectricitySoldLimitSetting rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedWindSpeed rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedPower rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:resetMeasuredCumulativeGeneratedElectricityAmount rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCutOutWindSpeed rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasExtremeWindSpeed rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeGeneratedElectricityAmount rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousGeneratedElectricityAmount rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredWindSpeed rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSystemInterconnectionStatus rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCutInWindSpeed rdfs:domain ns:HouseHoldSmallWindTurbinePowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:ElectricBlind rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ElectricBlind"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFaultDescription
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:FaultDescriptionValue ;
      :onProperty ns:hasFaultDescription
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTimerOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasTimerOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWindDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasWindDetectionStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSunLightDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasSunLightDetectionStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasOperationTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAutomaticOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasAutomaticOperationSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpenCloseSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasOpenCloseSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDegreeOfOpeningLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasDegreeOfOpeningLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasShadeAngleSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasShadeAngleSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpenCloseSpeed
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOpenCloseSpeed
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasElectricLockSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasElectricLockSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemoteOperationSettingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasRemoteOperationSettingStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSelectiveOpeningOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:SelectiveOpeningOperationSettingValue ;
      :onProperty ns:hasSelectiveOpeningOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOneTimeOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOneTimeOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOneTimeClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOneTimeClosingSpeedSetting
    ] .
ns:hasOpenCloseSetting rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSelectiveOpeningOperationSetting rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpeningSpeedSetting rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRemoteOperationSettingStatus rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOneTimeOpeningSpeedSetting rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasClosingSpeedSetting rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpenCloseStatus rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOperationTime rdfs:domain ns:ElectricBlind ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasShadeAngleSetting rdfs:domain ns:ElectricBlind ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSunLightDetectionStatus rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDegreeOfOpeningLevel rdfs:domain ns:ElectricBlind ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTimerOperationSetting rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAutomaticOperationSetting rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasWindDetectionStatus rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasElectricLockSetting rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOneTimeClosingSpeedSetting rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFaultDescription rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpenCloseSpeed rdfs:domain ns:ElectricBlind ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:ElectricStorageHeater rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ElectricStorageHeater"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedPowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasRatedPowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredIndoorTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredIndoorTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredOutdoorTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredOutdoorTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAirFlowRateSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasAirFlowRateSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFanOperationStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasFanOperationStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHeatStorageOperationStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasHeatStorageOperationStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHeatStorageTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasHeatStorageTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredStoredHeatTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredStoredHeatTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDaytimeHeatStorageSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasDaytimeHeatStorageSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDaytimeHeatStorageAbility
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasDaytimeHeatStorageAbility
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMidnightPowerDurationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMidnightPowerDurationSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMidnightPowerStartTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMidnightPowerStartTimeSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRadiationMethod
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:RadiationMethodValue ;
      :onProperty ns:hasRadiationMethod
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChildLockSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasChildLockSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFanTimer1Setting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasFanTimer1Setting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFanTimer1ONSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasFanTimer1ONSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFanTimer1OFFSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasFanTimer1OFFSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFanTimer2Setting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasFanTimer2Setting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFanTimer2ONSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasFanTimer2ONSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFanTimer2OFFSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasFanTimer2OFFSetting
    ] .
ns:hasFanTimer1ONSetting rdfs:domain ns:ElectricStorageHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasAirFlowRateSetting rdfs:domain ns:ElectricStorageHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasHeatStorageOperationStatus rdfs:domain ns:ElectricStorageHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFanTimer2OFFSetting rdfs:domain ns:ElectricStorageHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMidnightPowerStartTimeSetting rdfs:domain ns:ElectricStorageHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDaytimeHeatStorageAbility rdfs:domain ns:ElectricStorageHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFanTimer1OFFSetting rdfs:domain ns:ElectricStorageHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRadiationMethod rdfs:domain ns:ElectricStorageHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredOutdoorTemperature rdfs:domain ns:ElectricStorageHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredStoredHeatTemperature rdfs:domain ns:ElectricStorageHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasFanTimer2ONSetting rdfs:domain ns:ElectricStorageHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedPowerConsumption rdfs:domain ns:ElectricStorageHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredIndoorTemperature rdfs:domain ns:ElectricStorageHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTemperatureSetting rdfs:domain ns:ElectricStorageHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDaytimeHeatStorageSetting rdfs:domain ns:ElectricStorageHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasChildLockSetting rdfs:domain ns:ElectricStorageHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFanTimer2Setting rdfs:domain ns:ElectricStorageHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFanOperationStatus rdfs:domain ns:ElectricStorageHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFanTimer1Setting rdfs:domain ns:ElectricStorageHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasHeatStorageTemperatureSetting rdfs:domain ns:ElectricStorageHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMidnightPowerDurationSetting rdfs:domain ns:ElectricStorageHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:HumiditySensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "HumiditySensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredRelatedHumidityValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredRelatedHumidityValue
    ] .
ns:hasMeasuredRelatedHumidityValue rdfs:domain ns:HumiditySensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:PassageSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "PassageSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionHoldTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasDectectionHoldTime
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionDirection
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:DetectionDirectionValue ;
      :onProperty ns:hasDectectionDirection
    ] .
ns:hasDectectionDirection rdfs:domain ns:PassageSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDectectionThresholdLevel rdfs:domain ns:PassageSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDectectionHoldTime rdfs:domain ns:PassageSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:OperationStatusValue rdfs:comment "EPC:x80"^^xsd:string ;
  a :Class ;
  rdfs:label "OperationStatusValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:on
    ns:off
    ns:automaticOn
    ns:manualOn
    ns:manualOff
    ns:automatic
    ns:nonAutomatic
    ns:automaticUsed
    ns:nonAutomaticStopped
    ns:nonAutomaticUsed
    ns:heating
    ns:notHeating
    ns:possible
    ns:notPossible
    ns:normal
    ns:alarm
    ns:initial
    ns:heatingSuspended
    ns:heatingCycleCompleted
    ns:setting
    ns:preHeating
    ns:preheatTemperatureMaintenance
    ns:heatingTemporilyStopped
    ns:notSpecified
    ns:stop
    ns:cooking
    ns:steaming
    ns:cookingCompleted
    ns:refrigeration
    ns:freezing
  ) .
ns:off a ns:OperationStatusValue .
ns:cooking a ns:OperationStatusValue .
ns:freezing a ns:OperationStatusValue .
ns:heatingSuspended a ns:OperationStatusValue .
ns:initial a ns:OperationStatusValue .
ns:automaticOn a ns:OperationStatusValue .
ns:nonAutomaticUsed a ns:OperationStatusValue .
ns:nonAutomatic a ns:OperationStatusValue .
ns:notHeating a ns:OperationStatusValue .
ns:heatingCycleCompleted a ns:OperationStatusValue .
ns:automatic a ns:OperationStatusValue .
ns:cookingCompleted a ns:OperationStatusValue .
ns:nonAutomaticStopped a ns:OperationStatusValue .
ns:setting a ns:OperationStatusValue .
ns:possible a ns:OperationStatusValue .
ns:refrigeration a ns:OperationStatusValue .
ns:on a ns:OperationStatusValue .
ns:normal a ns:OperationStatusValue .
ns:manualOff a ns:OperationStatusValue .
ns:alarm a ns:OperationStatusValue .
ns:notSpecified a ns:OperationStatusValue .
ns:preheatTemperatureMaintenance a ns:OperationStatusValue .
ns:preHeating a ns:OperationStatusValue .
ns:stop a ns:OperationStatusValue .
ns:manualOn a ns:OperationStatusValue .
ns:heating a ns:OperationStatusValue .
ns:heatingTemporilyStopped a ns:OperationStatusValue .
ns:steaming a ns:OperationStatusValue .
ns:automaticUsed a ns:OperationStatusValue .
ns:notPossible a ns:OperationStatusValue .
ns:LowVoltageSmartElectricEnergy rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "LowVoltageSmartElectricEnergy"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCoefficient
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCoefficient
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNumberOfEffectiveDigitsForCumulativeElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasNumberOfEffectiveDigitsForCumulativeElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeElectricEnergyAmount_NormalDirection
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeElectricEnergyAmount_NormalDirection
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeElectricEnergyAmountUnit
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMeasuredCumulativeElectricEnergyAmountUnit
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeElectricEnergyAmountHistoricalData_NormalDirection
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeElectricEnergyAmountHistoricalData_NormalDirection
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeElectricEnergyAmount_ReverseDirection
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeElectricEnergyAmount_ReverseDirection
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeElectricEnergyAmountHistoricalData_ReverseDirection
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeElectricEnergyAmountHistoricalData_ReverseDirection
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDayToRetrieveMeasuredCumulativeElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDayToRetrieveMeasuredCumulativeElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantanenousAmountOfElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantanenousAmountOfElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantanenousCurrent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantanenousCurrent
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCumulativeElectricEnergyAmountMeasuredAtFixedTime_NormalDirection
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCumulativeElectricEnergyAmountMeasuredAtFixedTime_NormalDirection
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCumulativeElectricEnergyAmountMeasuredAtFixedTime_ReversedDirection
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCumulativeElectricEnergyAmountMeasuredAtFixedTime_ReversedDirection
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeElectricEnergyAmountHistoricalData2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeElectricEnergyAmountHistoricalData2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDayToRetrieveMeasuredCumulativeElectricEnergy2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDayToRetrieveMeasuredCumulativeElectricEnergy2
    ] .
ns:hasMeasuredCumulativeElectricEnergyAmountHistoricalData_ReverseDirection rdfs:domain ns:LowVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeElectricEnergyAmountHistoricalData_NormalDirection rdfs:domain ns:LowVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeElectricEnergyAmount_ReverseDirection rdfs:domain ns:LowVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantanenousAmountOfElectricEnergy rdfs:domain ns:LowVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDayToRetrieveMeasuredCumulativeElectricEnergy2 rdfs:domain ns:LowVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeElectricEnergyAmountUnit rdfs:domain ns:LowVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeElectricEnergyAmount_NormalDirection rdfs:domain ns:LowVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeElectricEnergyAmountHistoricalData2 rdfs:domain ns:LowVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCumulativeElectricEnergyAmountMeasuredAtFixedTime_ReversedDirection rdfs:domain ns:LowVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCumulativeElectricEnergyAmountMeasuredAtFixedTime_NormalDirection rdfs:domain ns:LowVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantanenousCurrent rdfs:domain ns:LowVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDayToRetrieveMeasuredCumulativeElectricEnergy rdfs:domain ns:LowVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCoefficient rdfs:domain ns:LowVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasNumberOfEffectiveDigitsForCumulativeElectricEnergy rdfs:domain ns:LowVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:OccurenceStatus rdfs:comment "Occurence status of a property"^^xsd:string ;
  a :Class ;
  rdfs:label "OccurenceStatusValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:occurenceStatusFound
    ns:occurenceStatusNotFound
  ) .
ns:occurenceStatusNotFound a ns:OccurenceStatus .
ns:occurenceStatusFound a ns:OccurenceStatus .
ns:AlarmStatusValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "AlarmStatusValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:noAlarm
    ns:outOfHotWater
    ns:waterLeaking
    ns:waterFrozen
    ns:breakOpened
    ns:doorOpened
    ns:manualUnlocked
    ns:tampered
  ) .
ns:breakOpened a ns:AlarmStatusValue .
ns:noAlarm a ns:AlarmStatusValue .
ns:waterLeaking a ns:AlarmStatusValue .
ns:manualUnlocked a ns:AlarmStatusValue .
ns:outOfHotWater a ns:AlarmStatusValue .
ns:tampered a ns:AlarmStatusValue .
ns:waterFrozen a ns:AlarmStatusValue .
ns:doorOpened a ns:AlarmStatusValue .
ns:TransferingMethods rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "TransferingMethods"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:localStorageTransger
    ns:remoteStorageTransger
    ns:mailTransfer
    ns:notSet
  ) .
ns:remoteStorageTransger a ns:TransferingMethods .
ns:localStorageTransger a ns:TransferingMethods .
ns:notSet a ns:TransferingMethods .
ns:mailTransfer a ns:TransferingMethods .
ns:MonoFunctionLighting rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "MonoFunctionLighting"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIlluminanceLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasIlluminanceLevel
    ] .
ns:hasIlluminanceLevel rdfs:domain ns:MonoFunctionLighting ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:ColdHotWaterHeatSourceEquipment rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ColdHotWaterHeatSourceEquipment"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterTemperatureSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasWaterTemperatureSetting1
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterTemperatureSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasWaterTemperatureSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredOutwardWaterTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredOutwardWaterTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInwardWaterTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInwardWaterTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSpecialOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasSpecialOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDailyTimerSettingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasDailyTimerSettingStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDailyTimerSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDailyTimerSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDailyTimerSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDailyTimerSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOffTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOffTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOffTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOffTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOffTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOffTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativePowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativePowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedPowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRatedPowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerConsumptionMeasurementMethod
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasPowerConsumptionMeasurementMethod
    ] .
ns:hasOffTimerReservationSetting rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasPowerConsumptionMeasurementMethod rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWaterTemperatureSetting1 rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDailyTimerSettingStatus rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasWaterTemperatureSetting2 rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSpecialOperationSetting rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOffTimerSettingRelativeTime rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativePowerConsumption rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDailyTimerSetting2 rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerSettingTime rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDailyTimerSetting1 rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOffTimerSettingTime rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInwardWaterTemperature rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerReservationSetting rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOnTimerSettingRelativeTime rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedPowerConsumption rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOperationModeSetting rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredOutwardWaterTemperature rdfs:domain ns:ColdHotWaterHeatSourceEquipment ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:AirSpeedSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "AirSpeedSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredValueOfAirSpeed
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredValueOfAirSpeed
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAirFlowDirection
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasAirFlowDirection
    ] .
ns:hasAirFlowDirection rdfs:domain ns:AirSpeedSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredValueOfAirSpeed rdfs:domain ns:AirSpeedSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:Buzzer rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "Buzzer"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSoundGenerationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasSoundGenerationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBuzzerSoundType
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasBuzzerSoundType
    ] .
ns:hasSoundGenerationSetting rdfs:domain ns:Buzzer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBuzzerSoundType rdfs:domain ns:Buzzer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:AirConditionerVentilationFan rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "AirConditionerVentilationFan"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSettingRoomHumidity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasSettingRoomHumidity
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVentilationAutoSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasVentilationAutoSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredRoomHumidity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredRoomHumidity
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasValueOfVentilationAirFlowRate
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasValueOfVentilationAirFlowRate
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHeatExchangerOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasHeatExchangerOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredValueOfCO2Concentration
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredValueOfCO2Concentration
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSmokeDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasSmokeDetectionStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAirPollutionDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasAirPollutionDetectionStatus
    ] .
ns:hasValueOfVentilationAirFlowRate rdfs:domain ns:AirConditionerVentilationFan ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAirPollutionDetectionStatus rdfs:domain ns:AirConditionerVentilationFan ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSettingRoomHumidity rdfs:domain ns:AirConditionerVentilationFan ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVentilationAutoSetting rdfs:domain ns:AirConditionerVentilationFan ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSmokeDetectionStatus rdfs:domain ns:AirConditionerVentilationFan ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredValueOfCO2Concentration rdfs:domain ns:AirConditionerVentilationFan ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredRoomHumidity rdfs:domain ns:AirConditionerVentilationFan ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHeatExchangerOperationSetting rdfs:domain ns:AirConditionerVentilationFan ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:GasMetter rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "GasMetter"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeGasConsumptionAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeGasConsumptionAmount
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeGasConsumptionLog
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeGasConsumptionLog
    ] .
ns:hasMeasuredCummulativeGasConsumptionAmount rdfs:domain ns:GasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeGasConsumptionLog rdfs:domain ns:GasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:ParallelProcessingCombinationTypePowerControl rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ParallelProcessingCombinationTypePowerControl"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:setPowerDeviationInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:setPowerDeviationInformation
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:setPowerReductionInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:setPowerReductionInformation
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:setTransmissionInterval
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:setTransmissionInterval
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:setRatedPowerConsumptionThreshold
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:setRatedPowerConsumptionThreshold
    ] .
ns:setTransmissionInterval rdfs:domain ns:ParallelProcessingCombinationTypePowerControl ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:setRatedPowerConsumptionThreshold rdfs:domain ns:ParallelProcessingCombinationTypePowerControl ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:setPowerDeviationInformation rdfs:domain ns:ParallelProcessingCombinationTypePowerControl ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:setPowerReductionInformation rdfs:domain ns:ParallelProcessingCombinationTypePowerControl ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:OperationFuntionSettingValue rdfs:comment "Operation state of device's functions"^^xsd:string ;
  a :Class ;
  rdfs:label "OperationFuntionSettingValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:noSetting
    ns:clothesDryerFunction
    ns:miteMoldControlFunction
    ns:activeDefrostingFunction
    ns:open
    ns:close
    ns:stop
    ns:continousSetting
    ns:oneTimeSetting
    ns:systemInterconnectedReservePowerFlowAcceptable
    ns:independent
    ns:systemInterconnectedReservePowerFlowNotAcceptable
    ns:timerOff
    ns:timer1_On
    ns:timer2_On
    ns:timeBasedRevervationON
    ns:timeAndRelativeTimeBasedRevervationON
    ns:timeAndRelativeTimeBasedRevervationOFF
    ns:relativeTimeBasedRevervationON
    ns:hybrid
    ns:systemLinked
    ns:fluorescentLight
    ns:led
    ns:noLight
    ns:nonFluorocarbonInverter
    ns:inverter
    ns:builtInType
    ns:seperateType
    ns:others
    ns:normalSetting
    ns:thermostatOverrideFunctionON
    ns:thermostatOverrideFunctionOFF
    ns:condensationSuppressorFunction
  ) .
ns:timeAndRelativeTimeBasedRevervationOFF a ns:OperationFuntionSettingValue .
ns:timerOff a ns:OperationFuntionSettingValue .
ns:timeAndRelativeTimeBasedRevervationON a ns:OperationFuntionSettingValue .
ns:timer2_On a ns:OperationFuntionSettingValue .
ns:nonFluorocarbonInverter a ns:OperationFuntionSettingValue .
ns:systemInterconnectedReservePowerFlowNotAcceptable a ns:OperationFuntionSettingValue .
ns:systemInterconnectedReservePowerFlowAcceptable a ns:OperationFuntionSettingValue .
ns:condensationSuppressorFunction a ns:OperationFuntionSettingValue .
ns:close a ns:OperationFuntionSettingValue .
ns:continousSetting a ns:OperationFuntionSettingValue .
ns:noSetting a ns:OperationFuntionSettingValue .
ns:activeDefrostingFunction a ns:OperationFuntionSettingValue .
ns:relativeTimeBasedRevervationON a ns:OperationFuntionSettingValue .
ns:thermostatOverrideFunctionON a ns:OperationFuntionSettingValue .
ns:oneTimeSetting a ns:OperationFuntionSettingValue .
ns:timeBasedRevervationON a ns:OperationFuntionSettingValue .
ns:seperateType a ns:OperationFuntionSettingValue .
ns:fluorescentLight a ns:OperationFuntionSettingValue .
ns:open a ns:OperationFuntionSettingValue .
ns:thermostatOverrideFunctionOFF a ns:OperationFuntionSettingValue .
ns:timer1_On a ns:OperationFuntionSettingValue .
ns:stop a ns:OperationFuntionSettingValue .
ns:others a ns:OperationFuntionSettingValue .
ns:clothesDryerFunction a ns:OperationFuntionSettingValue .
ns:builtInType a ns:OperationFuntionSettingValue .
ns:led a ns:OperationFuntionSettingValue .
ns:normalSetting a ns:OperationFuntionSettingValue .
ns:inverter a ns:OperationFuntionSettingValue .
ns:systemLinked a ns:OperationFuntionSettingValue .
ns:hybrid a ns:OperationFuntionSettingValue .
ns:miteMoldControlFunction a ns:OperationFuntionSettingValue .
ns:noLight a ns:OperationFuntionSettingValue .
ns:independent a ns:OperationFuntionSettingValue .
ns:AirFlowDirectionSettingValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "AirFlowDirectionSettingValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:rightward
    ns:leftward
    ns:central
    ns:leftCenter
    ns:rightCenter
    ns:uppermost
    ns:lowermost
    ns:uppermost_CentralMidpoint
    ns:lowermost_CentralMidpoint
  ) .
ns:leftCenter a ns:AirFlowDirectionSettingValue .
ns:rightward a ns:AirFlowDirectionSettingValue .
ns:lowermost_CentralMidpoint a ns:AirFlowDirectionSettingValue .
ns:leftward a ns:AirFlowDirectionSettingValue .
ns:uppermost a ns:AirFlowDirectionSettingValue .
ns:central a ns:AirFlowDirectionSettingValue .
ns:lowermost a ns:AirFlowDirectionSettingValue .
ns:uppermost_CentralMidpoint a ns:AirFlowDirectionSettingValue .
ns:rightCenter a ns:AirFlowDirectionSettingValue .
ns:BathRoomHeaterDryer rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "BathRoomHeaterDryer"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVentilationOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasVentilationOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathroomPreWarmOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasBathroomPreWarmOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathroomHeaterOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasBathroomHeaterOperationSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathroomDryerOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasBathroomDryerOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathroomAirCirculatorOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasBathroomAirCirculatorOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredBathroomHumidity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredBathroomHumidity
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredBathroomTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredBathroomTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVentilationAirFlowRateSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasVentilationAirFlowRateSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFilterCleaningReminderSignSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasFilterCleaningReminderSignSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHumanBodyDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasHumanBodyDetectionStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerBasedReservationSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOnTimerBasedReservationSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerBasedReservationSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasOnTimerBasedReservationSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOffTimerBasedReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOffTimerBasedReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOffTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOffTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOffTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOffTimerSettingRelativeTime
    ] .
ns:hasBathroomAirCirculatorOperationSetting rdfs:domain ns:BathRoomHeaterDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredBathroomHumidity rdfs:domain ns:BathRoomHeaterDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOffTimerSettingRelativeTime rdfs:domain ns:BathRoomHeaterDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerSettingTime rdfs:domain ns:BathRoomHeaterDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerBasedReservationSetting2 rdfs:domain ns:BathRoomHeaterDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOffTimerSettingTime rdfs:domain ns:BathRoomHeaterDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBathroomPreWarmOperationSetting rdfs:domain ns:BathRoomHeaterDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFilterCleaningReminderSignSetting rdfs:domain ns:BathRoomHeaterDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOnTimerBasedReservationSetting1 rdfs:domain ns:BathRoomHeaterDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasVentilationAirFlowRateSetting rdfs:domain ns:BathRoomHeaterDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasVentilationOperationSetting rdfs:domain ns:BathRoomHeaterDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOnTimerSettingRelativeTime rdfs:domain ns:BathRoomHeaterDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBathroomHeaterOperationSetting rdfs:domain ns:BathRoomHeaterDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBathroomDryerOperationSetting rdfs:domain ns:BathRoomHeaterDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOperationModeSetting rdfs:domain ns:BathRoomHeaterDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasHumanBodyDetectionStatus rdfs:domain ns:BathRoomHeaterDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredBathroomTemperature rdfs:domain ns:BathRoomHeaterDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOffTimerBasedReservationSetting rdfs:domain ns:BathRoomHeaterDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:OdorSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "OdorSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOdorDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasOdorDetectionStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredOdorValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredOdorValue
    ] .
ns:hasMeasuredOdorValue rdfs:domain ns:OdorSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDectectionThresholdLevel rdfs:domain ns:OdorSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOdorDetectionStatus rdfs:domain ns:OdorSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:WaterLevelSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "WaterLevelSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterLevelOverDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasWaterLevelOverDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLevelOverDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasLevelOverDetectionStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredWaterLevelValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredWaterLevelValue
    ] .
ns:hasMeasuredWaterLevelValue rdfs:domain ns:WaterLevelSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWaterLevelOverDectectionThresholdLevel rdfs:domain ns:WaterLevelSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasLevelOverDetectionStatus rdfs:domain ns:WaterLevelSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:ElectricHeater rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ElectricHeater"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAutomaticTemperatureControlSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasAutomaticTemperatureControlSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredRoomTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredRoomTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemotelySetTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRemotelySetTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAirFlowRateSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasAirFlowRateSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasONTimerBasedReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasONTimerBasedReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasONTimerTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasONTimerTimeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasONTimerRelativeTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasONTimerRelativeTimeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOFFTimerBasedReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasOFFTimerBasedReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOFFTimerTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOFFTimerTimeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOFFTimerRelativeTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOFFTimerRelativeTimeSetting
    ] .
ns:hasONTimerTimeSetting rdfs:domain ns:ElectricHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasAirFlowRateSetting rdfs:domain ns:ElectricHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasONTimerBasedReservationSetting rdfs:domain ns:ElectricHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredRoomTemperature rdfs:domain ns:ElectricHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOFFTimerTimeSetting rdfs:domain ns:ElectricHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOFFTimerRelativeTimeSetting rdfs:domain ns:ElectricHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTemperatureSetting rdfs:domain ns:ElectricHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRemotelySetTemperature rdfs:domain ns:ElectricHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasONTimerRelativeTimeSetting rdfs:domain ns:ElectricHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOFFTimerBasedReservationSetting rdfs:domain ns:ElectricHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAutomaticTemperatureControlSetting rdfs:domain ns:ElectricHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:PowerDistributionBoardMetering rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "PowerDistributionBoardMetering"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergyAmount_NormalDirection
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergyAmount_NormalDirection
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergyAmount_ReverseDirection
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergyAmount_ReverseDirection
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousPowerConsumptionList_Simplex
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousPowerConsumptionList_Simplex
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergyAmountUnit
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergyAmountUnit
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergyAmountHistoricalData_NormalDirection
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergyAmountHistoricalData_NormalDirection
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergyAmountHistoricalData_ReverseDirection
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergyAmountHistoricalData_ReverseDirection
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDayToRetrieveMeasuredCummulativeElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDayToRetrieveMeasuredCummulativeElectricEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantanenousAmountOfElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantanenousAmountOfElectricEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantanenousCurrent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantanenousCurrent
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantanenousVoltage
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantanenousVoltage
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel3
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel3
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel4
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel4
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel5
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel5
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel6
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel6
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel7
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel7
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel8
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel8
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel9
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel9
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel10
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel10
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel11
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel11
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel12
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel12
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel13
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel13
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel14
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel14
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel15
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel15
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel16
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel16
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel17
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel17
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel18
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel18
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel19
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel19
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel20
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel20
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel21
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel21
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel22
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel22
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel23
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel23
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel24
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel24
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel25
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel25
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel26
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel26
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel27
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel27
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel28
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel28
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel29
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel29
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel30
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel30
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel31
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel31
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasurementChannel32
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasurementChannel32
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMasterRatedCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMasterRatedCapacity
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNumberOfMeasurementChanels_Simplex
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasNumberOfMeasurementChanels_Simplex
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChannelRangeForCummulativeAmountOfElectricPowerConsumptionMeasurement_Simplex
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChannelRangeForCummulativeAmountOfElectricPowerConsumptionMeasurement_Simplex
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeAmountOfElectricPowerConsumptionList_Simplex
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeAmountOfElectricPowerConsumptionList_Simplex
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChannelRangeForInstantaneousCurrentMeasurement_Simplex
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChannelRangeForInstantaneousCurrentMeasurement_Simplex
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousCurrentList_Simplex
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousCurrentList_Simplex
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChannelRangeForInstantaneousPowerConsumptionMeasurement_Simplex
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChannelRangeForInstantaneousPowerConsumptionMeasurement_Simplex
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNumberOfMeasurementChanels_Duplex
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasNumberOfMeasurementChanels_Duplex
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChannelRangeForCummulativeAmountOfElectricPowerConsumptionMeasurement_Duplex
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChannelRangeForCummulativeAmountOfElectricPowerConsumptionMeasurement_Duplex
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeAmountOfElectricPowerConsumptionList_Duplex
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeAmountOfElectricPowerConsumptionList_Duplex
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChannelRangeForInstantaneousCurrentMeasurement_Duplex
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChannelRangeForInstantaneousCurrentMeasurement_Duplex
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousCurrentList_Duplex
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousCurrentList_Duplex
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChannelRangeForInstantaneousPowerConsumptionMeasurement_Duplex
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChannelRangeForInstantaneousPowerConsumptionMeasurement_Duplex
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousPowerConsumptionList_Duplex
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousPowerConsumptionList_Duplex
    ] .
ns:hasMeasuredInstantaneousCurrentList_Duplex rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantanenousVoltage rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeElectricEnergyAmountHistoricalData_NormalDirection rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDayToRetrieveMeasuredCummulativeElectricEnergy rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChannelRangeForInstantaneousCurrentMeasurement_Duplex rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeAmountOfElectricPowerConsumptionList_Simplex rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousPowerConsumptionList_Duplex rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel8 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel9 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel4 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel5 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel6 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChannelRangeForCummulativeAmountOfElectricPowerConsumptionMeasurement_Simplex rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel7 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel10 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel1 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel2 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel3 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasNumberOfMeasurementChanels_Duplex rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel14 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel13 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel12 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel11 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel18 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChannelRangeForInstantaneousPowerConsumptionMeasurement_Simplex rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel17 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel16 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel15 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantanenousCurrent rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel19 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasNumberOfMeasurementChanels_Simplex rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChannelRangeForInstantaneousCurrentMeasurement_Simplex rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeElectricEnergyAmount_ReverseDirection rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousPowerConsumptionList_Simplex rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChannelRangeForInstantaneousPowerConsumptionMeasurement_Duplex rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantanenousAmountOfElectricEnergy rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel21 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel20 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousCurrentList_Simplex rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeElectricEnergyAmountHistoricalData_ReverseDirection rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel25 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel24 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel23 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel22 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel29 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel28 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeElectricEnergyAmountUnit rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel27 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel26 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeElectricEnergyAmount_NormalDirection rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeAmountOfElectricPowerConsumptionList_Duplex rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel32 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel31 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChannelRangeForCummulativeAmountOfElectricPowerConsumptionMeasurement_Duplex rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasurementChannel30 rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMasterRatedCapacity rdfs:domain ns:PowerDistributionBoardMetering ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:BathWaterLevelSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "BathWaterLevelSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterLevelOverDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasWaterLevelOverDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLevelOverDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasLevelOverDetectionStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredWaterLevelValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredWaterLevelValue
    ] .
ns:hasMeasuredWaterLevelValue rdfs:domain ns:BathWaterLevelSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWaterLevelOverDectectionThresholdLevel rdfs:domain ns:BathWaterLevelSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasLevelOverDetectionStatus rdfs:domain ns:BathWaterLevelSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:RemoteControlSettingValue rdfs:comment "EPC:x93"^^xsd:string ;
  a :Class ;
  rdfs:label "RemoteControlSetting"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:normalCommunicationLine_PublicNetworkDiabled
    ns:notThroughAPublicNetwork
    ns:normalCommunicationLine_PublicNetworkEnalbed
    ns:notThroughAPublicNetwork
  ) .
ns:normalCommunicationLine_PublicNetworkEnalbed a ns:RemoteControlSettingValue .
ns:normalCommunicationLine_PublicNetworkDiabled a ns:RemoteControlSettingValue .
ns:notThroughAPublicNetwork a ns:RemoteControlSettingValue .
ns:MailingSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "MailingSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMailingDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasMailingDetectionStatus
    ] .
ns:hasMailingDetectionStatus rdfs:domain ns:MailingSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDectectionThresholdLevel rdfs:domain ns:MailingSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:Audio rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "Audio"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVolumeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasVolumeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMuteSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasMuteSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasInputSourceSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:InputSourceSettingValue ;
      :onProperty ns:hasInputSourceSetting
    ] .
ns:hasMuteSetting rdfs:domain ns:Audio ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasVolumeSetting rdfs:domain ns:Audio ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasInputSourceSetting rdfs:domain ns:Audio ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:NetworkCamera rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "NetworkCamera"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasStillImagePhotographySettingAcceptanceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasStillImagePhotographySettingAcceptanceStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:setStillImagePhotographySetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:boolean ;
      :onProperty ns:setStillImagePhotographySetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTransferSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:TransferingMethods ;
      :onProperty ns:hasTransferSetting
    ] .
ns:setStillImagePhotographySetting rdfs:domain ns:NetworkCamera ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasStillImagePhotographySettingAcceptanceStatus rdfs:domain ns:NetworkCamera ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasTransferSetting rdfs:domain ns:NetworkCamera ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:RiceCooker rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "RiceCooker"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCoverOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasCoverOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRiceCookingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasRiceCookingStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRiceCookingControlSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasRiceCookingControlSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWarmerSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasWarmerSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasInnerPotRemovalStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasInnerPotRemovalStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCoverRemovalStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasCoverRemovalStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRiceCookingReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasRiceCookingReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRiceCookingReservationSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRiceCookingReservationSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRiceCookingReservationSettingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRiceCookingReservationSettingTime
    ] .
ns:hasInnerPotRemovalStatus rdfs:domain ns:RiceCooker ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRiceCookingReservationSetting rdfs:domain ns:RiceCooker ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRiceCookingStatus rdfs:domain ns:RiceCooker ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasWarmerSetting rdfs:domain ns:RiceCooker ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCoverRemovalStatus rdfs:domain ns:RiceCooker ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRiceCookingReservationSettingRelativeTime rdfs:domain ns:RiceCooker ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRiceCookingReservationSettingTime rdfs:domain ns:RiceCooker ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRiceCookingControlSetting rdfs:domain ns:RiceCooker ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCoverOpenCloseStatus rdfs:domain ns:RiceCooker ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:IonEmissionMethodValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "IonEmissionMethodValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:clusterIonMethod
    ns:negativeIonMethod
  ) .
ns:negativeIonMethod a ns:IonEmissionMethodValue .
ns:clusterIonMethod a ns:IonEmissionMethodValue .
ns:TypeClassificationValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "TypeClassificationValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:runningWater
    ns:recycledWater
    ns:sewageWater
    ns:others
    ns:notSpecified
    ns:publicWaterworksCompany
    ns:privateSectorCompany
    ns:individual
    ns:cityGas
    ns:lpGas
    ns:naturalGas
  ) .
ns:privateSectorCompany a ns:TypeClassificationValue .
ns:naturalGas a ns:TypeClassificationValue .
ns:lpGas a ns:TypeClassificationValue .
ns:runningWater a ns:TypeClassificationValue .
ns:notSpecified a ns:TypeClassificationValue .
ns:cityGas a ns:TypeClassificationValue .
ns:others a ns:TypeClassificationValue .
ns:individual a ns:TypeClassificationValue .
ns:recycledWater a ns:TypeClassificationValue .
ns:sewageWater a ns:TypeClassificationValue .
ns:publicWaterworksCompany a ns:TypeClassificationValue .
ns:CallSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "CallSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCallStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasCallStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCallHoldingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasCallHoldingTime
    ] .
ns:hasDectectionThresholdLevel rdfs:domain ns:CallSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCallStatus rdfs:domain ns:CallSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCallHoldingTime rdfs:domain ns:CallSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:WaterLeakSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "WaterLeakSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterLeakDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasWaterLeakDetectionStatus
    ] .
ns:hasDectectionThresholdLevel rdfs:domain ns:WaterLeakSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasWaterLeakDetectionStatus rdfs:domain ns:WaterLeakSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:ChargerDischargerTypeValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ChargerDischargerTypeValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:ac_HLC_ChargingOnly
    ns:ac_HLC_ChargingDischargingPossible
    ns:dcTypeAA_ChargingOnly
    ns:dcTypeAA_ChargingDischargingPossible
    ns:dcTypeAA_DischargingOnly
    ns:dcTypeBB_ChargingOnly
    ns:dcTypeBB_ChargingDischargingPossible
    ns:dcTypeBB_DischargingOnly
    ns:dcTypeEE_ChargingOnly
    ns:dcTypeEE_ChargingDischargingPossible
    ns:dcTypeEE_DischargingOnly
    ns:dcTypeFF_ChargingOnly
    ns:dcTypeFF_ChargingDischargingPossible
    ns:dcTypeFF_DischargingOnly
    ns:ac_CPLT
  ) .
ns:dcTypeFF_ChargingOnly a ns:ChargerDischargerTypeValue .
ns:ac_HLC_ChargingOnly a ns:ChargerDischargerTypeValue .
ns:ac_HLC_ChargingDischargingPossible a ns:ChargerDischargerTypeValue .
ns:dcTypeFF_ChargingDischargingPossible a ns:ChargerDischargerTypeValue .
ns:dcTypeBB_ChargingOnly a ns:ChargerDischargerTypeValue .
ns:dcTypeBB_DischargingOnly a ns:ChargerDischargerTypeValue .
ns:dcTypeAA_DischargingOnly a ns:ChargerDischargerTypeValue .
ns:dcTypeAA_ChargingDischargingPossible a ns:ChargerDischargerTypeValue .
ns:dcTypeBB_ChargingDischargingPossible a ns:ChargerDischargerTypeValue .
ns:dcTypeFF_DischargingOnly a ns:ChargerDischargerTypeValue .
ns:ac_CPLT a ns:ChargerDischargerTypeValue .
ns:dcTypeEE_ChargingOnly a ns:ChargerDischargerTypeValue .
ns:dcTypeEE_DischargingOnly a ns:ChargerDischargerTypeValue .
ns:dcTypeAA_ChargingOnly a ns:ChargerDischargerTypeValue .
ns:dcTypeEE_ChargingDischargingPossible a ns:ChargerDischargerTypeValue .
ns:EarthquakeSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "EarthquakeSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasEarthquakeOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasEarthquakeOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetEarthquakeOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:EarthquakeSensor ;
      :onProperty ns:resetEarthquakeOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSIValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasSIValue
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetEarthquakeSensorSIValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:EarthquakeSensor ;
      :onProperty ns:resetEarthquakeSensorSIValue
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCollapseOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasCollapseOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetCollapseOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:EarthquakeSensor ;
      :onProperty ns:resetCollapseOccurenceStatus
    ] .
ns:resetCollapseOccurenceStatus rdfs:domain ns:EarthquakeSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDectectionThresholdLevel rdfs:domain ns:EarthquakeSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:resetEarthquakeSensorSIValue rdfs:domain ns:EarthquakeSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCollapseOccurenceStatus rdfs:domain ns:EarthquakeSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:resetEarthquakeOccurenceStatus rdfs:domain ns:EarthquakeSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSIValue rdfs:domain ns:EarthquakeSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasEarthquakeOccurenceStatus rdfs:domain ns:EarthquakeSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:EmergencyButton rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "EmergencyButton"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasEmergencyOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasEmergencyOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetEmergencyOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:EmergencyButton ;
      :onProperty ns:resetEmergencyOccurenceStatus
    ] .
ns:hasEmergencyOccurenceStatus rdfs:domain ns:EmergencyButton ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:resetEmergencyOccurenceStatus rdfs:domain ns:EmergencyButton ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:FanHeater rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "FanHeater"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredRoomTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredRoomTemperature
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAutomaticTemperatureControlSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasAutomaticTemperatureControlSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasONTimerBasedReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasONTimerBasedReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasONTimerTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasONTimerTimeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasONTimerRelativeTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasONTimerRelativeTimeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOFFTimerBasedReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasOFFTimerBasedReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOFFTimerTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOFFTimerTimeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOFFTimerRelativeTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOFFTimerRelativeTimeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasExtensionalOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasExtensionalOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasExtensionalOperationTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasExtensionalOperationTimerSettingTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIonEmissionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasIonEmissionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasImplementedIonEmissionMethod
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:IonEmissionMethodValue ;
      :onProperty ns:hasImplementedIonEmissionMethod
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOilAmountLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:LiquidAmountLevelValue ;
      :onProperty ns:hasOilAmountLevel
    ] .
ns:hasIonEmissionSetting rdfs:domain ns:FanHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasExtensionalOperationTimerSettingTime rdfs:domain ns:FanHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasONTimerBasedReservationSetting rdfs:domain ns:FanHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOFFTimerTimeSetting rdfs:domain ns:FanHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOFFTimerBasedReservationSetting rdfs:domain ns:FanHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasExtensionalOperationSetting rdfs:domain ns:FanHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAutomaticTemperatureControlSetting rdfs:domain ns:FanHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasONTimerTimeSetting rdfs:domain ns:FanHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredRoomTemperature rdfs:domain ns:FanHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOFFTimerRelativeTimeSetting rdfs:domain ns:FanHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasImplementedIonEmissionMethod rdfs:domain ns:FanHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasTemperatureSetting rdfs:domain ns:FanHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOilAmountLevel rdfs:domain ns:FanHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasONTimerRelativeTimeSetting rdfs:domain ns:FanHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:BathHeatingStatusSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "BathHeatingStatusSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathHeatingDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasBathHeatingDetectionStatus
    ] .
ns:hasBathHeatingDetectionStatus rdfs:domain ns:BathHeatingStatusSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDectectionThresholdLevel rdfs:domain ns:BathHeatingStatusSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:NumberOfSprinkleSettingValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "NumberOfSprinkleSettingValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:bothOn
    ns:firstOn
    ns:secondOn
  ) .
ns:secondOn a ns:NumberOfSprinkleSettingValue .
ns:bothOn a ns:NumberOfSprinkleSettingValue .
ns:firstOn a ns:NumberOfSprinkleSettingValue .
ns:TemperatureSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "TemperatureSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredTemperatureValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredTemperatureValue
    ] .
ns:hasMeasuredTemperatureValue rdfs:domain ns:TemperatureSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:Refrigerator rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "Refrigerator"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDoorOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasDoorOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDoorOpenWarning
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasDoorOpenWarning
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRefrigeratorCompartmentDoorStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasRefrigeratorCompartmentDoorStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFreezerCompartmentDoorStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasFreezerCompartmentDoorStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIceCompartmentDoorStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasIceCompartmentDoorStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVegetableCompartmentDoorStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasVegetableCompartmentDoorStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMultiRefrigeratingModeCompartmentDoorStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasMultiRefrigeratingModeCompartmentDoorStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMaximumAllowableTemperatureSettingLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMaximumAllowableTemperatureSettingLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRefrigeratorCompartmentTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRefrigeratorCompartmentTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFreezerCompartmentTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasFreezerCompartmentTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIceCompartmentTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasIceCompartmentTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVegetableCompartmentTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasVegetableCompartmentTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMultiRefrigeratorCompartmentTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMultiRefrigeratorCompartmentTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRefrigeratorCompartmentTemperatureLevelSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRefrigeratorCompartmentTemperatureLevelSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFreezerCompartmentTemperatureLevelSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasFreezerCompartmentTemperatureLevelSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIceCompartmentTemperatureLevelSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasIceCompartmentTemperatureLevelSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVegetableCompartmentTemperatureLevelSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasVegetableCompartmentTemperatureLevelSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMultiRefrigeratorCompartmentTemperatureLevelSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMultiRefrigeratorCompartmentTemperatureLevelSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredRefrigeratorCompartmentTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredRefrigeratorCompartmentTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredFreezerCompartmentTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredFreezerCompartmentTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredSubZeroFreshCompartmentTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredSubZeroFreshCompartmentTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredVegetableCompartmentTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredVegetableCompartmentTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredMultiRefrigeratorCompartmentTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredMultiRefrigeratorCompartmentTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCompressorRotationSpeed
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCompressorRotationSpeed
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedPowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedPowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasQuickFreezeFunctionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasQuickFreezeFunctionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasQuickRefrigerationFunctionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasQuickRefrigerationFunctionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIceMakerSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasIceMakerSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIceMakerOperationStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasIceMakerOperationStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIceMakerWaterTankStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasIceMakerWaterTankStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRefrigeratorCompartmentHumidificationFunctionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasRefrigeratorCompartmentHumidificationFunctionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVegetableCompartmentHumidificationFunctionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasVegetableCompartmentHumidificationFunctionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDeodorizationFunctionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasDeodorizationFunctionSetting
    ] .
ns:hasIceMakerWaterTankStatus rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasQuickFreezeFunctionSetting rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredFreezerCompartmentTemperature rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDoorOpenCloseStatus rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFreezerCompartmentTemperatureSetting rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRefrigeratorCompartmentHumidificationFunctionSetting rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMaximumAllowableTemperatureSettingLevel rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredSubZeroFreshCompartmentTemperature rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMultiRefrigeratorCompartmentTemperatureLevelSetting rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasFreezerCompartmentTemperatureLevelSetting rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasQuickRefrigerationFunctionSetting rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRatedPowerConsumption rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVegetableCompartmentTemperatureSetting rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasIceMakerSetting rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasIceCompartmentDoorStatus rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredMultiRefrigeratorCompartmentTemperature rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasIceMakerOperationStatus rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFreezerCompartmentDoorStatus rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDeodorizationFunctionSetting rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredVegetableCompartmentTemperature rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMultiRefrigeratorCompartmentTemperatureSetting rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVegetableCompartmentHumidificationFunctionSetting rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRefrigeratorCompartmentDoorStatus rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasVegetableCompartmentTemperatureLevelSetting rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRefrigeratorCompartmentTemperatureSetting rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasIceCompartmentTemperatureSetting rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDoorOpenWarning rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMultiRefrigeratingModeCompartmentDoorStatus rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasIceCompartmentTemperatureLevelSetting rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRefrigeratorCompartmentTemperatureLevelSetting rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCompressorRotationSpeed rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredRefrigeratorCompartmentTemperature rdfs:domain ns:Refrigerator ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVegetableCompartmentDoorStatus rdfs:domain ns:Refrigerator ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:InputSourceSettingValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "CharacterCodes"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:builtIntoTuner
    ns:builtIntoOpticalDisk
    ns:builtIntoMD
    ns:builtIntoCassettle
    ns:externalInputAnalogDigitalInputTerminal
    ns:externalInputHDMI
    ns:builtInMemoryCardSlot
    ns:builtInMemoryStorage
    ns:externalInputUSB
    ns:dedicatedTerminalForPortablePlayer
    ns:notSet
    ns:networkRelatedInput
    ns:equipmentUniqueArea
    ns:prohibited
  ) .
ns:dedicatedTerminalForPortablePlayer a ns:InputSourceSettingValue .
ns:builtIntoOpticalDisk a ns:InputSourceSettingValue .
ns:equipmentUniqueArea a ns:InputSourceSettingValue .
ns:externalInputUSB a ns:InputSourceSettingValue .
ns:prohibited a ns:InputSourceSettingValue .
ns:builtInMemoryStorage a ns:InputSourceSettingValue .
ns:networkRelatedInput a ns:InputSourceSettingValue .
ns:externalInputHDMI a ns:InputSourceSettingValue .
ns:builtIntoMD a ns:InputSourceSettingValue .
ns:externalInputAnalogDigitalInputTerminal a ns:InputSourceSettingValue .
ns:notSet a ns:InputSourceSettingValue .
ns:builtIntoTuner a ns:InputSourceSettingValue .
ns:builtIntoCassettle a ns:InputSourceSettingValue .
ns:builtInMemoryCardSlot a ns:InputSourceSettingValue .
ns:VehicleCharger rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "VehicleCharger"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedChargeCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedChargeCapacity
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVehicleConnectionChargeableStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasVehicleConnectionChargeableStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumMaximumChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMinimumMaximumChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumMaximumChargingCurrent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMinimumMaximumChargingCurrent
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChargerType
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ChargerDischargerTypeValue ;
      :onProperty ns:hasChargerType
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:setVehicleConnectionConfirmation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:VehicleCharger ;
      :onProperty ns:setVehicleConnectionConfirmation
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVehicleMountedBatteryChargeableCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasVehicleMountedBatteryChargeableCapacity
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVehicleMountedBatteryRemainingChargeableCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasVehicleMountedBatteryRemainingChargeableCapacity
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasUsedCapacityOfVehicleMountedBattery1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasUsedCapacityOfVehicleMountedBattery1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedVoltage
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedVoltage
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetMeasuredCumulativeChargingDischargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:VehicleCharger ;
      :onProperty ns:resetMeasuredCumulativeChargingDischargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemainingStoredElectric1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRemainingStoredElectric1
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemainingStoredElectric3
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRemainingStoredElectric3
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVehicleID
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasVehicleID
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChargingAmountSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChargingAmountSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChargingElectricEnergySetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChargingElectricEnergySetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChargingElectricCurrentSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChargingElectricCurrentSetting
    ] .
ns:hasVehicleMountedBatteryChargeableCapacity rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedChargeCapacity rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChargingAmountSetting rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeChargingElectricEnergy rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChargingElectricCurrentSetting rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMinimumMaximumChargingElectricEnergy rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:setVehicleConnectionConfirmation rdfs:domain ns:VehicleCharger ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousChargingElectricEnergy rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMinimumMaximumChargingCurrent rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVehicleMountedBatteryRemainingChargeableCapacity rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVehicleConnectionChargeableStatus rdfs:domain ns:VehicleCharger ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasChargingElectricEnergySetting rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChargerType rdfs:domain ns:VehicleCharger ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRatedVoltage rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:resetMeasuredCumulativeChargingDischargingElectricEnergy rdfs:domain ns:VehicleCharger ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRemainingStoredElectric1 rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOperationModeSetting rdfs:domain ns:VehicleCharger ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRemainingStoredElectric3 rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasUsedCapacityOfVehicleMountedBattery1 rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVehicleID rdfs:domain ns:VehicleCharger ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:ElectricSlidingDoor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ElectricSlidingDoor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFaultDescription
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:FaultDescriptionValue ;
      :onProperty ns:hasFaultDescription
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationTimeSettingValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasOperationTimeSettingValue
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpeningTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOpeningTimeSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpeningClosingOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasOpeningClosingOperationSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDegreeOfOpeningSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasDegreeOfOpeningSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpeningClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOpeningClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemoteOperationSettingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasRemoteOperationSettingStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSelectiveOpeningOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:SelectiveOpeningOperationSettingValue ;
      :onProperty ns:hasSelectiveOpeningOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOneTimeOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOneTimeOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOneTimeClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOneTimeClosingSpeedSetting
    ] .
ns:hasSelectiveOpeningOperationSetting rdfs:domain ns:ElectricSlidingDoor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpeningSpeedSetting rdfs:domain ns:ElectricSlidingDoor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDegreeOfOpeningSetting rdfs:domain ns:ElectricSlidingDoor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRemoteOperationSettingStatus rdfs:domain ns:ElectricSlidingDoor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOneTimeOpeningSpeedSetting rdfs:domain ns:ElectricSlidingDoor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasClosingSpeedSetting rdfs:domain ns:ElectricSlidingDoor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpenCloseStatus rdfs:domain ns:ElectricSlidingDoor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpeningClosingOperationSetting rdfs:domain ns:ElectricSlidingDoor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOperationTimeSettingValue rdfs:domain ns:ElectricSlidingDoor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOpeningTimeSetting rdfs:domain ns:ElectricSlidingDoor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOneTimeClosingSpeedSetting rdfs:domain ns:ElectricSlidingDoor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFaultDescription rdfs:domain ns:ElectricSlidingDoor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpeningClosingSpeedSetting rdfs:domain ns:ElectricSlidingDoor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:OxygenSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "OxygenSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredValueOfOxygenConcentration
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredValueOfOxygenConcentration
    ] .
ns:hasMeasuredValueOfOxygenConcentration rdfs:domain ns:OxygenSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:ElectricLock rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ElectricLock"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLockSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasLockSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLockSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasLockSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDoorGuardLockStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasDoorGuardLockStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDoorOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasDoorOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOccupantStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasOccupantStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAlarmStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:AlarmStatusValue ;
      :onProperty ns:hasAlarmStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAutoLockModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasAutoLockModeSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLockBatteryLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasLockBatteryLevel
    ] .
ns:hasLockBatteryLevel rdfs:domain ns:ElectricLock ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAutoLockModeSetting rdfs:domain ns:ElectricLock ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOccupantStatus rdfs:domain ns:ElectricLock ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDoorGuardLockStatus rdfs:domain ns:ElectricLock ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasLockSetting1 rdfs:domain ns:ElectricLock ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasLockSetting2 rdfs:domain ns:ElectricLock ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDoorOpenCloseStatus rdfs:domain ns:ElectricLock ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAlarmStatus rdfs:domain ns:ElectricLock ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:ElectricToiletSeat rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ElectricToiletSeat"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasToiletSeatTemperatureLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasToiletSeatTemperatureLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasToiletSeatHeaterSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasToiletSeatHeaterSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasToiletSeatTemporalHaltSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasToiletSeatTemporalHaltSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasToiletSeatTemporalHaltStartTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasToiletSeatTemporalHaltStartTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasToiletSeatTemporalHaltDuration
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasToiletSeatTemporalHaltDuration
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRoomHeatingTemeperatureLevelSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasRoomHeatingTemeperatureLevelSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRoomHeatingSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasRoomHeatingSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRoomHeatingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasRoomHeatingStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRoomHeatingStartTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRoomHeatingStartTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRoomHeatingDuration
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRoomHeatingDuration
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSpecialOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasSpecialOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHumanDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasHumanDetectionStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSeatingDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasSeatingDetectionStatus
    ] .
ns:hasRoomHeatingDuration rdfs:domain ns:ElectricToiletSeat ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSpecialOperationModeSetting rdfs:domain ns:ElectricToiletSeat ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSeatingDetectionStatus rdfs:domain ns:ElectricToiletSeat ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasToiletSeatTemporalHaltSetting rdfs:domain ns:ElectricToiletSeat ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRoomHeatingTemeperatureLevelSetting rdfs:domain ns:ElectricToiletSeat ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRoomHeatingStatus rdfs:domain ns:ElectricToiletSeat ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasToiletSeatTemporalHaltStartTime rdfs:domain ns:ElectricToiletSeat ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHumanDetectionStatus rdfs:domain ns:ElectricToiletSeat ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasToiletSeatTemperatureLevel rdfs:domain ns:ElectricToiletSeat ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasToiletSeatHeaterSetting rdfs:domain ns:ElectricToiletSeat ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasToiletSeatTemporalHaltDuration rdfs:domain ns:ElectricToiletSeat ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRoomHeatingStartTime rdfs:domain ns:ElectricToiletSeat ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRoomHeatingSetting rdfs:domain ns:ElectricToiletSeat ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:CommercialShowcaseOutdoorUnit rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "CommercialShowcaseOutdoorUnit"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasExceptionalStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasExceptionalStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredOutDoorAirTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredOutDoorAirTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCompressorOperationStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasCompressorOperationStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasGroupInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasGroupInformation
    ] .
ns:hasMeasuredOutDoorAirTemperature rdfs:domain ns:CommercialShowcaseOutdoorUnit ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOperationModeSetting rdfs:domain ns:CommercialShowcaseOutdoorUnit ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCompressorOperationStatus rdfs:domain ns:CommercialShowcaseOutdoorUnit ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasGroupInformation rdfs:domain ns:CommercialShowcaseOutdoorUnit ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasExceptionalStatus rdfs:domain ns:CommercialShowcaseOutdoorUnit ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:OperationStateSettingValue rdfs:comment "Operation state of device's functions"^^xsd:string ;
  a :Class ;
  rdfs:label "OperationStateSettingValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:normalOperation
    ns:specialState
    ns:defrostingState
    ns:preHeatingState
    ns:heatRemovalState
    ns:automaticAirFlowSwingNotUsed
    ns:automaticAirFlowSwingVerticalUsed
    ns:automaticAirFlowSwingHorizontalUsed
    ns:automaticAirFlowSwingVerticalAndHorizontalUsed
    ns:fullyOpened
    ns:fullyClosed
    ns:opened
    ns:closed
    ns:stopHalfway
    ns:nonPriorityState
    ns:locked
    ns:unLocked
    ns:ordinaryLevel
    ns:notificationOfBatteryReplacementState
    ns:supplyingHotWaterState
    ns:keepingBathTemperatureState
    ns:stopped
    ns:generating
    ns:starting
    ns:stopping
    ns:undeterminedState
    ns:idling
    ns:vehicleNotConnectedState
    ns:vehicleConnectedNotChargeableNotDischargableState
    ns:vehicleConnectedChargeableNotDischargableState
    ns:vehicleConnectedNotChargeableDischargableState
    ns:vehicleConnectedChargeableDischargableState
    ns:vehicleConnectedChargeableState
    ns:vehicleConnectedNotChargeableState
    ns:readyState
    ns:busyState
    ns:implementedState
    ns:notImplementedState
    ns:enableState
    ns:disableState
    ns:temporaryDisableState
    ns:connectedState
    ns:disconnectedState
    ns:notRegisteredState
    ns:deletedState
    ns:startedRestartedState
    ns:suspendedState
    ns:mountedState
    ns:unMountedState
  ) .
ns:heatRemovalState a ns:OperationStateSettingValue .
ns:ordinaryLevel a ns:OperationStateSettingValue .
ns:deletedState a ns:OperationStateSettingValue .
ns:automaticAirFlowSwingNotUsed a ns:OperationStateSettingValue .
ns:vehicleConnectedChargeableNotDischargableState a ns:OperationStateSettingValue .
ns:idling a ns:OperationStateSettingValue .
ns:vehicleNotConnectedState a ns:OperationStateSettingValue .
ns:temporaryDisableState a ns:OperationStateSettingValue .
ns:fullyOpened a ns:OperationStateSettingValue .
ns:automaticAirFlowSwingVerticalAndHorizontalUsed a ns:OperationStateSettingValue .
ns:notRegisteredState a ns:OperationStateSettingValue .
ns:vehicleConnectedChargeableState a ns:OperationStateSettingValue .
ns:opened a ns:OperationStateSettingValue .
ns:startedRestartedState a ns:OperationStateSettingValue .
ns:nonPriorityState a ns:OperationStateSettingValue .
ns:suspendedState a ns:OperationStateSettingValue .
ns:closed a ns:OperationStateSettingValue .
ns:disconnectedState a ns:OperationStateSettingValue .
ns:automaticAirFlowSwingHorizontalUsed a ns:OperationStateSettingValue .
ns:readyState a ns:OperationStateSettingValue .
ns:locked a ns:OperationStateSettingValue .
ns:vehicleConnectedChargeableDischargableState a ns:OperationStateSettingValue .
ns:fullyClosed a ns:OperationStateSettingValue .
ns:notificationOfBatteryReplacementState a ns:OperationStateSettingValue .
ns:specialState a ns:OperationStateSettingValue .
ns:normalOperation a ns:OperationStateSettingValue .
ns:supplyingHotWaterState a ns:OperationStateSettingValue .
ns:stopped a ns:OperationStateSettingValue .
ns:connectedState a ns:OperationStateSettingValue .
ns:stopping a ns:OperationStateSettingValue .
ns:busyState a ns:OperationStateSettingValue .
ns:unLocked a ns:OperationStateSettingValue .
ns:defrostingState a ns:OperationStateSettingValue .
ns:vehicleConnectedNotChargeableState a ns:OperationStateSettingValue .
ns:automaticAirFlowSwingVerticalUsed a ns:OperationStateSettingValue .
ns:stopHalfway a ns:OperationStateSettingValue .
ns:notImplementedState a ns:OperationStateSettingValue .
ns:mountedState a ns:OperationStateSettingValue .
ns:undeterminedState a ns:OperationStateSettingValue .
ns:vehicleConnectedNotChargeableDischargableState a ns:OperationStateSettingValue .
ns:starting a ns:OperationStateSettingValue .
ns:unMountedState a ns:OperationStateSettingValue .
ns:generating a ns:OperationStateSettingValue .
ns:disableState a ns:OperationStateSettingValue .
ns:vehicleConnectedNotChargeableNotDischargableState a ns:OperationStateSettingValue .
ns:implementedState a ns:OperationStateSettingValue .
ns:enableState a ns:OperationStateSettingValue .
ns:preHeatingState a ns:OperationStateSettingValue .
ns:keepingBathTemperatureState a ns:OperationStateSettingValue .
ns:VOCSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "VOCSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasDetectionStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredValueOfVOCConcentration
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredValueOfVOCConcentration
    ] .
ns:hasDectectionThresholdLevel rdfs:domain ns:VOCSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDetectionStatus rdfs:domain ns:VOCSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredValueOfVOCConcentration rdfs:domain ns:VOCSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:ElectricEnergySensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ElectricEnergySensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCumulativeAmountOfElectriceEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCumulativeAmountOfElectriceEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMediumCapacitySensorInstantaneousElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMediumCapacitySensorInstantaneousElectricEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSmallCapacitySensorInstantaneousElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasSmallCapacitySensorInstantaneousElectricEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLargeCapacitySensorInstantaneousElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasLargeCapacitySensorInstantaneousElectricEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCumulativeAmountOfElectriceEnergyMeasurementLog
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCumulativeAmountOfElectriceEnergyMeasurementLog
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasEffectiveMeasuredValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasEffectiveMeasuredValue
    ] .
ns:hasLargeCapacitySensorInstantaneousElectricEnergy rdfs:domain ns:ElectricEnergySensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCumulativeAmountOfElectriceEnergy rdfs:domain ns:ElectricEnergySensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMediumCapacitySensorInstantaneousElectricEnergy rdfs:domain ns:ElectricEnergySensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCumulativeAmountOfElectriceEnergyMeasurementLog rdfs:domain ns:ElectricEnergySensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasEffectiveMeasuredValue rdfs:domain ns:ElectricEnergySensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSmallCapacitySensorInstantaneousElectricEnergy rdfs:domain ns:ElectricEnergySensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:PackageTypeCommercialAirConditionerIndoorUnit rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "PackageTypeCommercialAirconditionerIndoorUnit"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredIndoorUnitTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredIndoorUnitTemperature
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasThermostatState
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasThermostatState
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCurrentFunction
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasCurrentFunction
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasGroupInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasGroupInformation
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerConsumptionRangeIndoorUnit
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:PowerConsumptionRange ;
      :onProperty ns:hasPowerConsumptionRangeIndoorUnit
    ] .
ns:hasThermostatState rdfs:domain ns:PackageTypeCommercialAirConditionerIndoorUnit ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOperationModeSetting rdfs:domain ns:PackageTypeCommercialAirConditionerIndoorUnit ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasGroupInformation rdfs:domain ns:PackageTypeCommercialAirConditionerIndoorUnit ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCurrentFunction rdfs:domain ns:PackageTypeCommercialAirConditionerIndoorUnit ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPowerConsumptionRangeIndoorUnit rdfs:domain ns:PackageTypeCommercialAirConditionerIndoorUnit ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredIndoorUnitTemperature rdfs:domain ns:PackageTypeCommercialAirConditionerIndoorUnit ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:RainSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "RainSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRainDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasRainDetectionStatus
    ] .
ns:hasRainDetectionStatus rdfs:domain ns:RainSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDectectionThresholdLevel rdfs:domain ns:RainSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:CrimePreventionSensor rdfs:comment "Crime Prevention Sensor"^^xsd:string ;
  a :Class ;
  rdfs:label "CrimePreventionSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasInvasionOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasInvasionOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetInvasionOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:CrimePreventionSensor ;
      :onProperty ns:resetInvasionOccurenceStatus
    ] .
ns:hasDectectionThresholdLevel rdfs:domain ns:CrimePreventionSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:resetInvasionOccurenceStatus rdfs:domain ns:CrimePreventionSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasInvasionOccurenceStatus rdfs:domain ns:CrimePreventionSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:WashingMachine rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "WashingMachine"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDoorCoverOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasDoorCoverOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWashingMachineSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasWashingMachineSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCurrentStageOfWashingCycle
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasCurrentStageOfWashingCycle
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemainingTimeToCompleteWashingCycle
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRemainingTimeToCompleteWashingCycle
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSetting_RelativeTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSetting_RelativeTime
    ] .
ns:hasDoorCoverOpenCloseStatus rdfs:domain ns:WashingMachine ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRemainingTimeToCompleteWashingCycle rdfs:domain ns:WashingMachine ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWashingMachineSetting rdfs:domain ns:WashingMachine ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOnTimerReservationSetting rdfs:domain ns:WashingMachine ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCurrentStageOfWashingCycle rdfs:domain ns:WashingMachine ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOnTimerSetting rdfs:domain ns:WashingMachine ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerSetting_RelativeTime rdfs:domain ns:WashingMachine ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:SelectiveOpeningOperationSettingValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "PowerConsumptionRange"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:degreeOfSettingPositionOpen
    ns:operationTimeSettingValueOpen
    ns:operationTimeSettingValueClose
    ns:localSettingPosition
    ns:slitDegreeOfOpeningSetting
  ) .
ns:operationTimeSettingValueClose a ns:SelectiveOpeningOperationSettingValue .
ns:localSettingPosition a ns:SelectiveOpeningOperationSettingValue .
ns:operationTimeSettingValueOpen a ns:SelectiveOpeningOperationSettingValue .
ns:slitDegreeOfOpeningSetting a ns:SelectiveOpeningOperationSettingValue .
ns:degreeOfSettingPositionOpen a ns:SelectiveOpeningOperationSettingValue .
ns:BedPresenceSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "BedPresenceSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBedPresentDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasBedPresentDetectionStatus
    ] .
ns:hasBedPresentDetectionStatus rdfs:domain ns:BedPresenceSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDectectionThresholdLevel rdfs:domain ns:BedPresenceSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:FaultDescriptionValue rdfs:comment "EPC:x89"^^xsd:string ;
  a :Class ;
  rdfs:label "FaultDescriptionValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:noFault
    ns:recoverableFaultType1
    ns:recoverableFaultType2
    ns:recoverableFaultType3
    ns:recoverableFaultType4
    ns:recoverableFaultType5
    ns:recoverableFaultType6
    ns:recoverableFaultType7
    ns:requireRepairFaultType1
    ns:requireRepairFaultType2
    ns:requireRepairFaultType3
    ns:requireRepairFaultType4
    ns:requireRepairFaultType5
    ns:requireRepairFaultType6
    ns:unknownFault
  ) .
ns:requireRepairFaultType5 a ns:FaultDescriptionValue .
ns:requireRepairFaultType6 a ns:FaultDescriptionValue .
ns:requireRepairFaultType3 a ns:FaultDescriptionValue .
ns:requireRepairFaultType4 a ns:FaultDescriptionValue .
ns:recoverableFaultType1 a ns:FaultDescriptionValue .
ns:requireRepairFaultType1 a ns:FaultDescriptionValue .
ns:recoverableFaultType2 a ns:FaultDescriptionValue .
ns:requireRepairFaultType2 a ns:FaultDescriptionValue .
ns:noFault a ns:FaultDescriptionValue .
ns:recoverableFaultType5 a ns:FaultDescriptionValue .
ns:recoverableFaultType6 a ns:FaultDescriptionValue .
ns:unknownFault a ns:FaultDescriptionValue .
ns:recoverableFaultType3 a ns:FaultDescriptionValue .
ns:recoverableFaultType4 a ns:FaultDescriptionValue .
ns:recoverableFaultType7 a ns:FaultDescriptionValue .
ns:IlluminanceSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "IlluminanceSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIlluminanceValue1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasIlluminanceValue1
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIlluminanceValue2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasIlluminanceValue2
    ] .
ns:hasIlluminanceValue1 rdfs:domain ns:IlluminanceSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasIlluminanceValue2 rdfs:domain ns:IlluminanceSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:DetectionDirectionValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "DetectionDirectionValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:inDirection
    ns:in_RightDirection
    ns:rightDirection
    ns:out_RightDirection
    ns:outDirection
    ns:out_LeftDirection
    ns:leftDirection
    ns:in_LeftDirection
    ns:noDetection
    ns:detected_DirectionUnknown
  ) .
ns:in_LeftDirection a ns:DetectionDirectionValue .
ns:outDirection a ns:DetectionDirectionValue .
ns:detected_DirectionUnknown a ns:DetectionDirectionValue .
ns:in_RightDirection a ns:DetectionDirectionValue .
ns:out_LeftDirection a ns:DetectionDirectionValue .
ns:leftDirection a ns:DetectionDirectionValue .
ns:out_RightDirection a ns:DetectionDirectionValue .
ns:noDetection a ns:DetectionDirectionValue .
ns:inDirection a ns:DetectionDirectionValue .
ns:rightDirection a ns:DetectionDirectionValue .
ns:WaterHeater rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "WaterHeater"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAutomaticWaterHeatingSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasAutomaticWaterHeatingSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAutomaticTemperatureControlSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasAutomaticTemperatureControlSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterHeaterStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasWaterHeaterStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterHeatingTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasWaterHeatingTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasManualWaterHeatingStopDaySetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasManualWaterHeatingStopDaySetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRelativeTimeForManualWaterHeatingOffSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRelativeTimeForManualWaterHeatingOffSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTankOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasTankOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDaytimeReheatingPermissionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasDaytimeReheatingPermissionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredWaterTemperatureOfWaterHeater
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredWaterTemperatureOfWaterHeater
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAlarmStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:AlarmStatusValue ;
      :onProperty ns:hasAlarmStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHotWaterSupplyStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasHotWaterSupplyStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRelativeTimeSettingForKeepingBathTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRelativeTimeSettingForKeepingBathTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTemperatureOfSuppliedWaterSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasTemperatureOfSuppliedWaterSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathWaterVolumeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasBathWaterVolumeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredAmountOfRemainingWaterInTank
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredAmountOfRemainingWaterInTank
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTankCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasTankCapacity
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAutomaticBathWaterHeatingModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasAutomaticBathWaterHeatingModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathroomPrioritySetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasBathroomPrioritySetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathOperationStatusMonitor
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasBathOperationStatusMonitor
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasManualBathHotWaterAdditionFunctionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasManualBathHotWaterAdditionFunctionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasManualLukewarmWaterTemperatureLoweringFunctionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasManualLukewarmWaterTemperatureLoweringFunctionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathWaterVolumeSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasBathWaterVolumeSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathWaterVolumeSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasBathWaterVolumeSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathWaterVolumeSetting3
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasBathWaterVolumeSetting3
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathWaterVolumeSetting4
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasBathWaterVolumeSetting4
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathWaterVolumeSetting4MaximumSettableLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasBathWaterVolumeSetting4MaximumSettableLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVolumeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasVolumeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMuteSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasMuteSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemainingHotWaterVolume
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasRemainingHotWaterVolume
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSurplusElectricEnergyPowerPredictionValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasSurplusElectricEnergyPowerPredictionValue
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedPowerConsumptionOfHPUnitInWinter
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasRatedPowerConsumptionOfHPUnitInWinter
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedPowerConsumptionOfHPUnitInBetweenSeason
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasRatedPowerConsumptionOfHPUnitInBetweenSeason
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedPowerConsumptionOfHPUnitInSummer
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasRatedPowerConsumptionOfHPUnitInSummer
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasParticipationInEnergyShift
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasParticipationInEnergyShift
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasStandardTimeToStartHeating
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasStandardTimeToStartHeating
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNumberOfEnergyShifts
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasNumberOfEnergyShifts
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTimeHeatingShiftTime1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasTimeHeatingShiftTime1
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasExpectedEnergyOfTimeHeatingShiftTime1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasExpectedEnergyOfTimeHeatingShiftTime1
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasEnergyConsumptionPerHour1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasEnergyConsumptionPerHour1
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTimeHeatingShiftTime2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasTimeHeatingShiftTime2
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasExpectedEnergyOfTimeHeatingShiftTime2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasExpectedEnergyOfTimeHeatingShiftTime2
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasEnergyConsumptionPerHour2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasEnergyConsumptionPerHour2
    ] .
ns:hasVolumeSetting rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasManualWaterHeatingStopDaySetting rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasManualBathHotWaterAdditionFunctionSetting rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRatedPowerConsumptionOfHPUnitInWinter rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTankOperationModeSetting rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasTimeHeatingShiftTime1 rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTimeHeatingShiftTime2 rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasAlarmStatus rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBathWaterVolumeSetting4MaximumSettableLevel rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasStandardTimeToStartHeating rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBathWaterVolumeSetting1 rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMuteSetting rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBathWaterVolumeSetting2 rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSurplusElectricEnergyPowerPredictionValue rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredAmountOfRemainingWaterInTank rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBathWaterVolumeSetting3 rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTemperatureOfSuppliedWaterSetting rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTankCapacity rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBathWaterVolumeSetting4 rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWaterHeatingTemperatureSetting rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRelativeTimeForManualWaterHeatingOffSetting rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasAutomaticBathWaterHeatingModeSetting rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasEnergyConsumptionPerHour2 rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasAutomaticWaterHeatingSetting rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasEnergyConsumptionPerHour1 rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBathWaterVolumeSetting rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasExpectedEnergyOfTimeHeatingShiftTime1 rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasParticipationInEnergyShift rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasExpectedEnergyOfTimeHeatingShiftTime2 rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBathOperationStatusMonitor rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBathroomPrioritySetting rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasNumberOfEnergyShifts rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredWaterTemperatureOfWaterHeater rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDaytimeReheatingPermissionSetting rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAutomaticTemperatureControlSetting rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRatedPowerConsumptionOfHPUnitInBetweenSeason rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHotWaterSupplyStatus rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOnTimerReservationSetting rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRelativeTimeSettingForKeepingBathTemperature rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedPowerConsumptionOfHPUnitInSummer rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerSetting rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRemainingHotWaterVolume rdfs:domain ns:WaterHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWaterHeaterStatus rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasManualLukewarmWaterTemperatureLoweringFunctionSetting rdfs:domain ns:WaterHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:CurrentValueSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "CurrentValueSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCurrentValue1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCurrentValue1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedVoltageToBeMeasured
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasRatedVoltageToBeMeasured
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCurrentValue2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCurrentValue2
    ] .
ns:hasMeasuredCurrentValue1 rdfs:domain ns:CurrentValueSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCurrentValue2 rdfs:domain ns:CurrentValueSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedVoltageToBeMeasured rdfs:domain ns:CurrentValueSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:HighVoltageSmartElectricEnergy rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "HighVoltageSmartElectricEnergy"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCoefficient
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCoefficient
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMultiplyingFactorForCoefficient
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMultiplyingFactorForCoefficient
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFixedDay
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasFixedDay
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDayToRetrieveMeasuredCumulativeElectricEnergyHistoricalData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDayToRetrieveMeasuredCumulativeElectricEnergyHistoricalData
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeActiveElectricEnergyAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeActiveElectricEnergyAmount
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCumulativeActiveElectricEnergyAmountMeasuredAtFixedTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCumulativeActiveElectricEnergyAmountMeasuredAtFixedTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCumulativeActiveElectricEnergyForPowerFactorMeasurement
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCumulativeActiveElectricEnergyForPowerFactorMeasurement
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNumberOfEffectiveDigitsForCumulativeElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasNumberOfEffectiveDigitsForCumulativeElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeActiveElectricEnergyAmountUnit
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMeasuredCumulativeActiveElectricEnergyAmountUnit
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeActiveElectricEnergyAmountHistoricalData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeActiveElectricEnergyAmountHistoricalData
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMonthlyMaximumElectricPowerDemand
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMonthlyMaximumElectricPowerDemand
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCumulativeMaximumElectricPowerDemand
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCumulativeMaximumElectricPowerDemand
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasElectricPowerDemandAtFixedTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasElectricPowerDemandAtFixedTime
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNumberOfEffectiveDigitsForElectricPowerDemand
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasNumberOfEffectiveDigitsForElectricPowerDemand
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasElectricPowerDemandUnit
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasElectricPowerDemandUnit
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredElectricPowerDemandHistoricalData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredElectricPowerDemandHistoricalData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCumulativeMaximumElectricPowerDemandUnit
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasCumulativeMaximumElectricPowerDemandUnit
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredReactiveElectricPowerConsumptionForPowerFactorMeasurement
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredReactiveElectricPowerConsumptionForPowerFactorMeasurement
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeReactiveElectricPowerConsumptionAtFixedTimeForPowerFactorMeasurement
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeReactiveElectricPowerConsumptionAtFixedTimeForPowerFactorMeasurement
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNumberOfEffectiveDigitsForMeasuredCumulativeReactiveElectricPowerConsumptionForPowerFactorMeasurement
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasNumberOfEffectiveDigitsForMeasuredCumulativeReactiveElectricPowerConsumptionForPowerFactorMeasurement
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeReactiveElectricPowerConsumptionAmountUnit
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMeasuredCumulativeReactiveElectricPowerConsumptionAmountUnit
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeReactiveElectricPowerConsumptionForPoweerFactorMeasurementHistoricalData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeReactiveElectricPowerConsumptionForPoweerFactorMeasurementHistoricalData
    ] .
ns:hasCumulativeActiveElectricEnergyForPowerFactorMeasurement rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeReactiveElectricPowerConsumptionAmountUnit rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCumulativeMaximumElectricPowerDemandUnit rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredReactiveElectricPowerConsumptionForPowerFactorMeasurement rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasElectricPowerDemandUnit rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMultiplyingFactorForCoefficient rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeActiveElectricEnergyAmountUnit rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCumulativeActiveElectricEnergyAmountMeasuredAtFixedTime rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasNumberOfEffectiveDigitsForElectricPowerDemand rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredElectricPowerDemandHistoricalData rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeReactiveElectricPowerConsumptionAtFixedTimeForPowerFactorMeasurement rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeActiveElectricEnergyAmountHistoricalData rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMonthlyMaximumElectricPowerDemand rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasNumberOfEffectiveDigitsForMeasuredCumulativeReactiveElectricPowerConsumptionForPowerFactorMeasurement rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasFixedDay rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDayToRetrieveMeasuredCumulativeElectricEnergyHistoricalData rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCumulativeMaximumElectricPowerDemand rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeActiveElectricEnergyAmount rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasElectricPowerDemandAtFixedTime rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCoefficient rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasNumberOfEffectiveDigitsForCumulativeElectricEnergy rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeReactiveElectricPowerConsumptionForPoweerFactorMeasurementHistoricalData rdfs:domain ns:HighVoltageSmartElectricEnergy ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:SoundSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "SoundSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSoundDectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasSoundDectionStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSoundDectionHoldingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasSoundDectionHoldingTime
    ] .
ns:hasDectectionThresholdLevel rdfs:domain ns:SoundSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSoundDectionHoldingTime rdfs:domain ns:SoundSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSoundDectionStatus rdfs:domain ns:SoundSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:WaterFlowRateSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "WaterFlowRateSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCumulativeFlowRate
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasCumulativeFlowRate
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFlowRate
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasFlowRate
    ] .
ns:hasFlowRate rdfs:domain ns:WaterFlowRateSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCumulativeFlowRate rdfs:domain ns:WaterFlowRateSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:WasherDryer rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "WasherDryer"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDoorCoverOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasDoorCoverOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWasherDryerSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasWasherDryerSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWasherDryerCycleSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasWasherDryerCycleSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWasherDryerCycleSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasWasherDryerCycleSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWasherDryingCycleSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasWasherDryingCycleSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWasherDryerCycleOptionList1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasWasherDryerCycleOptionList1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWasherDryerCycleOptionList2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasWasherDryerCycleOptionList2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWasherDryerCycleOptionList3
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasWasherDryerCycleOptionList3
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterFlowSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasWaterFlowSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRotationSpeedForSpinDrying
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRotationSpeedForSpinDrying
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDegreeOfDryingSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDegreeOfDryingSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemainingWashingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRemainingWashingTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemainingDryingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRemainingDryingTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasElapsedTimeOnTheONTimer
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasElapsedTimeOnTheONTimer
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPreSoakingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasPreSoakingTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCurrentStageOfWasherDryerCycle
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasCurrentStageOfWasherDryerCycle
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterVolumeSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasWaterVolumeSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterVolumeSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasWaterVolumeSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWashingTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasWashingTimeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNumberofRinsingTimes
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasNumberofRinsingTimes
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRinsingProcessSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRinsingProcessSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSpinDryingTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasSpinDryingTimeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDryingTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDryingTimeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWarmWaterSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasWarmWaterSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBathtubWaterRecycleSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasBathtubWaterRecycleSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWrinklingMinimizationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasWrinklingMinimizationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTimeToCompleteWasherAndDryerCycle
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasTimeToCompleteWasherAndDryerCycle
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWasherAndDryerCycle
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasWasherAndDryerCycle
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSetting_RelativeTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSetting_RelativeTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDoorCoverLockSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasDoorCoverLockSetting
    ] .
ns:hasWasherDryerSetting rdfs:domain ns:WasherDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCurrentStageOfWasherDryerCycle rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWaterVolumeSetting1 rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWaterVolumeSetting2 rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDoorCoverLockSetting rdfs:domain ns:WasherDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasWasherAndDryerCycle rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPreSoakingTime rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWasherDryerCycleOptionList1 rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRotationSpeedForSpinDrying rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRemainingWashingTime rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasNumberofRinsingTimes rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerSetting_RelativeTime rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWaterFlowSetting rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBathtubWaterRecycleSetting rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasElapsedTimeOnTheONTimer rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDryingTimeSetting rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDegreeOfDryingSetting rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWasherDryerCycleOptionList3 rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWasherDryerCycleOptionList2 rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWashingTimeSetting rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWarmWaterSetting rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRinsingProcessSetting rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDoorCoverOpenCloseStatus rdfs:domain ns:WasherDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasTimeToCompleteWasherAndDryerCycle rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerReservationSetting rdfs:domain ns:WasherDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSpinDryingTimeSetting rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRemainingDryingTime rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWrinklingMinimizationSetting rdfs:domain ns:WasherDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasWasherDryerCycleSetting2 rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWasherDryingCycleSetting rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWasherDryerCycleSetting1 rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerSetting rdfs:domain ns:WasherDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:EchonetDeviceGroupCodeValue rdfs:comment "Echonet Device Group Code values"^^xsd:string ;
  a :Class ;
  rdfs:label "EchonetDeviceGroupCodeValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:airconditionerRelatedDeviceGroupCode
    ns:audiovisualRelatedDeviceGroupCode
    ns:cookingHouseholdRelatedDeviceGroupCode
    ns:healthRelatedDeviceGroupCode
    ns:housingFacilityRelatedDeviceGroupCode
    ns:managementOperationRelatedDeviceGroupCode
    ns:sensorDelatedDeviceGroupCode
  ) .
ns:airconditionerRelatedDeviceGroupCode a ns:EchonetDeviceGroupCodeValue .
ns:audiovisualRelatedDeviceGroupCode a ns:EchonetDeviceGroupCodeValue .
ns:managementOperationRelatedDeviceGroupCode a ns:EchonetDeviceGroupCodeValue .
ns:sensorDelatedDeviceGroupCode a ns:EchonetDeviceGroupCodeValue .
ns:cookingHouseholdRelatedDeviceGroupCode a ns:EchonetDeviceGroupCodeValue .
ns:housingFacilityRelatedDeviceGroupCode a ns:EchonetDeviceGroupCodeValue .
ns:healthRelatedDeviceGroupCode a ns:EchonetDeviceGroupCodeValue .
ns:SmartGasMetter rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "SmartGasMeter"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasGasMetterClassificationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:TypeClassificationValue ;
      :onProperty ns:hasGasMetterClassificationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOwnerClassification
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:TypeClassificationValue ;
      :onProperty ns:hasOwnerClassification
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeGasConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeGasConsumption
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeGasConsumptionUnit
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMeasuredCumulativeGasConsumptionUnit
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeGasConsumptionHistoricalData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeGasConsumptionHistoricalData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDayToRetrieveMeasuredCumulativeGasConsumptionHistoricalData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDayToRetrieveMeasuredCumulativeGasConsumptionHistoricalData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDetectionOfAbnormalValueInMetterData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasDetectionOfAbnormalValueInMetterData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSecurityDataInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasSecurityDataInformation
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasValveClosureByTheCenter
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasValveClosureByTheCenter
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPermissionFromTheCenterToReopenTheValveClosedByTheCenter
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasPermissionFromTheCenterToReopenTheValveClosedByTheCenter
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasShutoffValveStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasShutoffValveStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHistoricalDataOfShutoffReasons
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasHistoricalDataOfShutoffReasons
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIDNumberSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasIDNumberSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVerificationExpirationInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasVerificationExpirationInformation
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeGasConsumptionInformationStringTimeIncluded
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeGasConsumptionInformationStringTimeIncluded
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeGasConsumptionHistoricalInformationStringTimeIncluded
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeGasConsumptionHistoricalInformationStringTimeIncluded
    ] .
ns:hasValveClosureByTheCenter rdfs:domain ns:SmartGasMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeGasConsumptionHistoricalInformationStringTimeIncluded rdfs:domain ns:SmartGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDayToRetrieveMeasuredCumulativeGasConsumptionHistoricalData rdfs:domain ns:SmartGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasIDNumberSetting rdfs:domain ns:SmartGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHistoricalDataOfShutoffReasons rdfs:domain ns:SmartGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPermissionFromTheCenterToReopenTheValveClosedByTheCenter rdfs:domain ns:SmartGasMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDetectionOfAbnormalValueInMetterData rdfs:domain ns:SmartGasMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasGasMetterClassificationSetting rdfs:domain ns:SmartGasMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOwnerClassification rdfs:domain ns:SmartGasMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasShutoffValveStatus rdfs:domain ns:SmartGasMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeGasConsumptionHistoricalData rdfs:domain ns:SmartGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSecurityDataInformation rdfs:domain ns:SmartGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeGasConsumptionInformationStringTimeIncluded rdfs:domain ns:SmartGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeGasConsumptionUnit rdfs:domain ns:SmartGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeGasConsumption rdfs:domain ns:SmartGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVerificationExpirationInformation rdfs:domain ns:SmartGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:AirPollutionSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "AirPollutionSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAirPollutionDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasAirPollutionDetectionStatus
    ] .
ns:hasAirPollutionDetectionStatus rdfs:domain ns:AirPollutionSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDectectionThresholdLevel rdfs:domain ns:AirPollutionSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:OpenCloseSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "OpenCloseSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDegreeOfOpenningDetectionStatus1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDegreeOfOpenningDetectionStatus1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDegreeOfOpenningDetectionStatus2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasDegreeOfOpenningDetectionStatus2
    ] .
ns:hasDectectionThresholdLevel rdfs:domain ns:OpenCloseSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDegreeOfOpenningDetectionStatus1 rdfs:domain ns:OpenCloseSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDegreeOfOpenningDetectionStatus2 rdfs:domain ns:OpenCloseSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:LiquidAmountLevelValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "LiquidAmountLevelValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:empty
    ns:minimumLevel
    ns:amountLevel20Percent
    ns:amountLevel40Percent
    ns:amountLevel60Percent
    ns:amountLevel80Percent
    ns:maxLevel
  ) .
ns:amountLevel20Percent a ns:LiquidAmountLevelValue .
ns:minimumLevel a ns:LiquidAmountLevelValue .
ns:maxLevel a ns:LiquidAmountLevelValue .
ns:amountLevel60Percent a ns:LiquidAmountLevelValue .
ns:empty a ns:LiquidAmountLevelValue .
ns:amountLevel40Percent a ns:LiquidAmountLevelValue .
ns:amountLevel80Percent a ns:LiquidAmountLevelValue .
ns:ExtendedLightingSystem rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ExtendedLightingSystem"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIlluminanceLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasIlluminanceLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSceneControlSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasSceneControlSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNumberForAssigningSceneControlSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasNumberForAssigningSceneControlSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerConsumptionRateList
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasPowerConsumptionRateList
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerConsumptionWhenFullyLighted
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasPowerConsumptionWhenFullyLighted
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPossiblePowerSaving
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasPossiblePowerSaving
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerConsumptionLimitSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasPowerConsumptionLimitSetting
    ] .
ns:hasIlluminanceLevel rdfs:domain ns:ExtendedLightingSystem ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPowerConsumptionRateList rdfs:domain ns:ExtendedLightingSystem ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPowerConsumptionLimitSetting rdfs:domain ns:ExtendedLightingSystem ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPowerConsumptionWhenFullyLighted rdfs:domain ns:ExtendedLightingSystem ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPossiblePowerSaving rdfs:domain ns:ExtendedLightingSystem ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSceneControlSetting rdfs:domain ns:ExtendedLightingSystem ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasNumberForAssigningSceneControlSetting rdfs:domain ns:ExtendedLightingSystem ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:ElectricVehicleChargerDischager rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "VehicleCharger"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVehicleMountedBattery1_DischargeableCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasVehicleMountedBattery1_DischargeableCapacity
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVehicleMountedBattery2_DischargeableCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasVehicleMountedBattery2_DischargeableCapacity
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVehicleMountedBattery1_RemainingDischargeableCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasVehicleMountedBattery1_RemainingDischargeableCapacity
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVehicleMountedBattery2_RemainingDischargeableCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasVehicleMountedBattery2_RemainingDischargeableCapacity
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVehicleMountedBattery3_RemainingDischargeableCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasVehicleMountedBattery3_RemainingDischargeableCapacity
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedChargeCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedChargeCapacity
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedDisChargeCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedDisChargeCapacity
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVehicleConnectionChargeableStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasVehicleConnectionChargeableStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumMaximumChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMinimumMaximumChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumMaximumDisChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMinimumMaximumDisChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumMaximumChargingCurrent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMinimumMaximumChargingCurrent
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumMaximumDisChargingCurrent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMinimumMaximumDisChargingCurrent
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChargerType
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ChargerDischargerTypeValue ;
      :onProperty ns:hasChargerType
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:setVehicleConnectionConfirmation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ElectricVehicleChargerDischager ;
      :onProperty ns:setVehicleConnectionConfirmation
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVehicleMountedBatteryChargeableCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasVehicleMountedBatteryChargeableCapacity
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVehicleMountedBatteryRemainingChargeableCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasVehicleMountedBatteryRemainingChargeableCapacity
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasUsedCapacityOfVehicleMountedBattery1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasUsedCapacityOfVehicleMountedBattery1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasUsedCapacityOfVehicleMountedBattery2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasUsedCapacityOfVehicleMountedBattery2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedVoltage
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedVoltage
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousChargingDisChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousChargingDisChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousDisChargingChargingCurrent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousDisChargingChargingCurrent
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousDisChargingChargingVoltage
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousDisChargingChargingVoltage
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeDisChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeDisChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetMeasuredCumulativeDisChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ElectricVehicleChargerDischager ;
      :onProperty ns:resetMeasuredCumulativeDisChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetMeasuredCumulativeChargingDischargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ElectricVehicleChargerDischager ;
      :onProperty ns:resetMeasuredCumulativeChargingDischargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSystemInterconnectedType
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasSystemInterconnectedType
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemainingStoredElectric1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRemainingStoredElectric1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemainingStoredElectric2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRemainingStoredElectric2
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemainingStoredElectric3
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRemainingStoredElectric3
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVehicleID
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasVehicleID
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChargingAmountSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChargingAmountSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChargingAmountSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChargingAmountSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDisChargingAmountSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasDisChargingAmountSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChargingElectricEnergySetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChargingElectricEnergySetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChargingElectricCurrentSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChargingElectricCurrentSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDisChargingElectricEnergySetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasDisChargingElectricEnergySetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDisChargingElectricCurrentSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasDisChargingElectricCurrentSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedVoltageIndependent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedVoltageIndependent
    ] .
ns:hasChargingAmountSetting1 rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVehicleMountedBatteryChargeableCapacity rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMinimumMaximumDisChargingCurrent rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVehicleMountedBattery2_RemainingDischargeableCapacity rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeChargingElectricEnergy rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVehicleMountedBattery2_DischargeableCapacity rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousDisChargingChargingVoltage rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedDisChargeCapacity rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:setVehicleConnectionConfirmation rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRatedVoltageIndependent rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMinimumMaximumChargingCurrent rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:resetMeasuredCumulativeDisChargingElectricEnergy rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeDisChargingElectricEnergy rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVehicleMountedBattery1_DischargeableCapacity rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVehicleMountedBatteryRemainingChargeableCapacity rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSystemInterconnectedType rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasVehicleMountedBattery3_RemainingDischargeableCapacity rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVehicleConnectionChargeableStatus rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasChargingElectricEnergySetting rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDisChargingElectricEnergySetting rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedVoltage rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:resetMeasuredCumulativeChargingDischargingElectricEnergy rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOperationModeSetting rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasUsedCapacityOfVehicleMountedBattery2 rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasUsedCapacityOfVehicleMountedBattery1 rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChargingAmountSetting2 rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedChargeCapacity rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDisChargingAmountSetting rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChargingElectricCurrentSetting rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMinimumMaximumChargingElectricEnergy rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVehicleMountedBattery1_RemainingDischargeableCapacity rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChargerType rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRemainingStoredElectric2 rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDisChargingElectricCurrentSetting rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRemainingStoredElectric1 rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRemainingStoredElectric3 rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousChargingDisChargingElectricEnergy rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVehicleID rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMinimumMaximumDisChargingElectricEnergy rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousDisChargingChargingCurrent rdfs:domain ns:ElectricVehicleChargerDischager ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:Co2Sensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "CO2Sensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredValueOfCO2Concentration
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredValueOfCO2Concentration
    ] .
ns:hasMeasuredValueOfCO2Concentration rdfs:domain ns:Co2Sensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:LightingSystem rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "LightingSystem"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIlluminanceLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasIlluminanceLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSceneControlSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasSceneControlSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNumberForAssigningSceneControlSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasNumberForAssigningSceneControlSetting
    ] .
ns:hasIlluminanceLevel rdfs:domain ns:LightingSystem ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSceneControlSetting rdfs:domain ns:LightingSystem ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasNumberForAssigningSceneControlSetting rdfs:domain ns:LightingSystem ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:ClothesDryer rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ClothesDryer"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDoorCoverOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasDoorCoverOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDryingSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasDryingSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDryingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasDryingStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDryingRemainingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDryingRemainingTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSetting_RelativeTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSetting_RelativeTime
    ] .
ns:hasDryingRemainingTime rdfs:domain ns:ClothesDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDoorCoverOpenCloseStatus rdfs:domain ns:ClothesDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOnTimerReservationSetting rdfs:domain ns:ClothesDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDryingSetting rdfs:domain ns:ClothesDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDryingStatus rdfs:domain ns:ClothesDryer ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOnTimerSetting rdfs:domain ns:ClothesDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerSetting_RelativeTime rdfs:domain ns:ClothesDryer ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:MeasurementMethodValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "MeasurementMethodValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:classUnit
    ns:instanceUnit
    ns:nodeUnit
  ) .
ns:instanceUnit a ns:MeasurementMethodValue .
ns:nodeUnit a ns:MeasurementMethodValue .
ns:classUnit a ns:MeasurementMethodValue .
ns:AutomaticHeatingMenu rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "AutomaticHeatingMenu"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:fullyAutomatic
    ns:reheatingBoiledRice
    ns:reheatingCookedDish
    ns:warmSake
    ns:warmMilk
    ns:boilingLeafyVegetables
    ns:boilingFruitFlowerVegetables
    ns:boilingRootVegetables
    ns:defrostingMeat
    ns:defrostingSashimi
    ns:grillHamburgerSteak
    ns:bakeGratin
    ns:makeChawanMushi
    ns:cookingRice
    ns:reheatingFries
    ns:fries
    ns:bakeSpongeCakes
    ns:bakeChiffonCakes
    ns:bakeCookies
    ns:bakeCreamPuffs
    ns:toastBread
    ns:userDefine
    ns:notSpecified
  ) .
ns:bakeGratin a ns:AutomaticHeatingMenu .
ns:warmMilk a ns:AutomaticHeatingMenu .
ns:defrostingSashimi a ns:AutomaticHeatingMenu .
ns:boilingRootVegetables a ns:AutomaticHeatingMenu .
ns:notSpecified a ns:AutomaticHeatingMenu .
ns:bakeSpongeCakes a ns:AutomaticHeatingMenu .
ns:reheatingBoiledRice a ns:AutomaticHeatingMenu .
ns:boilingLeafyVegetables a ns:AutomaticHeatingMenu .
ns:bakeCookies a ns:AutomaticHeatingMenu .
ns:makeChawanMushi a ns:AutomaticHeatingMenu .
ns:bakeChiffonCakes a ns:AutomaticHeatingMenu .
ns:defrostingMeat a ns:AutomaticHeatingMenu .
ns:bakeCreamPuffs a ns:AutomaticHeatingMenu .
ns:boilingFruitFlowerVegetables a ns:AutomaticHeatingMenu .
ns:userDefine a ns:AutomaticHeatingMenu .
ns:fullyAutomatic a ns:AutomaticHeatingMenu .
ns:reheatingCookedDish a ns:AutomaticHeatingMenu .
ns:fries a ns:AutomaticHeatingMenu .
ns:reheatingFries a ns:AutomaticHeatingMenu .
ns:toastBread a ns:AutomaticHeatingMenu .
ns:grillHamburgerSteak a ns:AutomaticHeatingMenu .
ns:warmSake a ns:AutomaticHeatingMenu .
ns:cookingRice a ns:AutomaticHeatingMenu .
ns:Display rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "Display"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDisplayControlSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasDisplayControlSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCharacterSettingAcceptanceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasCharacterSettingAcceptanceStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSupportedCharacterCodes
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasSupportedCharacterCodes
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCharacterStringToPresentToUser
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:CharacterCodes ;
      :onProperty ns:hasCharacterStringToPresentToUser
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAcceptedCharacterStringLength
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasAcceptedCharacterStringLength
    ] .
ns:hasSupportedCharacterCodes rdfs:domain ns:Display ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDisplayControlSetting rdfs:domain ns:Display ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCharacterStringToPresentToUser rdfs:domain ns:Display ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAcceptedCharacterStringLength rdfs:domain ns:Display ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCharacterSettingAcceptanceStatus rdfs:domain ns:Display ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:WeightSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "WeightSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWeightDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasWeightDetectionStatus
    ] .
ns:hasWeightDetectionStatus rdfs:domain ns:WeightSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDectectionThresholdLevel rdfs:domain ns:WeightSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:Controller rdfs:comment "Demand Reponse Event Controller"^^xsd:string ;
  a :Class ;
  rdfs:label "DR_Event_Controller"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBusinessID
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasBusinessID
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDRProgramType
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDRProgramType
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDRProgramID
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDRProgramID
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCurrentValidEventInfo
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasCurrentValidEventInfo
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNextValidEventInfo
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasNextValidEventInfo
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFutureEventInfoNotificationIDList
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasFutureEventInfoNotificationIDList
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPastEventInfoNotificationIDList
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasPastEventInfoNotificationIDList
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNewestReceivedEventNotificationID
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasNewestReceivedEventNotificationID
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOldestReceivedEventNotificationID
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOldestReceivedEventNotificationID
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNotificationIDDesignation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasNotificationIDDesignation
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasEventInfoIDDesignation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasEventInfoIDDesignation
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTargetDeviceInfoList
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasTargetDeviceInfoList
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasEventInfo
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasEventInfo
    ] .
ns:hasNextValidEventInfo rdfs:domain ns:Controller ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTargetDeviceInfoList rdfs:domain ns:Controller ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasNotificationIDDesignation rdfs:domain ns:Controller ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasFutureEventInfoNotificationIDList rdfs:domain ns:Controller ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDRProgramType rdfs:domain ns:Controller ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCurrentValidEventInfo rdfs:domain ns:Controller ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasNewestReceivedEventNotificationID rdfs:domain ns:Controller ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOldestReceivedEventNotificationID rdfs:domain ns:Controller ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPastEventInfoNotificationIDList rdfs:domain ns:Controller ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasEventInfoIDDesignation rdfs:domain ns:Controller ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBusinessID rdfs:domain ns:Controller ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDRProgramID rdfs:domain ns:Controller ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasEventInfo rdfs:domain ns:Controller ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:WattHourMetter rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "WattHourMeter"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergyAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergyAmount
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCummulativeElectricEnergyAmountUnit
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasCummulativeElectricEnergyAmountUnit
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCummulativeElectricEnergyMeasurementLog1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCummulativeElectricEnergyMeasurementLog1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCummulativeElectricEnergyMeasurementLog2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCummulativeElectricEnergyMeasurementLog2
    ] .
ns:hasMeasuredCummulativeElectricEnergyAmount rdfs:domain ns:WattHourMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCummulativeElectricEnergyMeasurementLog1 rdfs:domain ns:WattHourMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCummulativeElectricEnergyMeasurementLog2 rdfs:domain ns:WattHourMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCummulativeElectricEnergyAmountUnit rdfs:domain ns:WattHourMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:VentilationFan rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "VentilationFan"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVentilationAutoSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasVentilationAutoSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasValueOfVentilationAirFlowRate
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasValueOfVentilationAirFlowRate
    ] .
ns:hasValueOfVentilationAirFlowRate rdfs:domain ns:VentilationFan ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasVentilationAutoSetting rdfs:domain ns:VentilationFan ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:HumidifyingLevelValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "HumidifyingLevelValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:automatic
    ns:continousOperation
    ns:intermitentOperation
    ns:humidifyingLevel1
    ns:humidifyingLevel1
    ns:humidifyingLevel2
    ns:humidifyingLevel3
  ) .
ns:intermitentOperation a ns:HumidifyingLevelValue .
ns:automatic a ns:HumidifyingLevelValue .
ns:humidifyingLevel1 a ns:HumidifyingLevelValue .
ns:humidifyingLevel2 a ns:HumidifyingLevelValue .
ns:humidifyingLevel3 a ns:HumidifyingLevelValue .
ns:continousOperation a ns:HumidifyingLevelValue .
ns:ColorValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ColorValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:incandescentLampColor
    ns:white
    ns:daylightWhite
    ns:daylightColor
    ns:others
  ) .
ns:incandescentLampColor a ns:ColorValue .
ns:white a ns:ColorValue .
ns:daylightWhite a ns:ColorValue .
ns:others a ns:ColorValue .
ns:daylightColor a ns:ColorValue .
ns:LPGasMetter rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "LPGasMeter"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeGasConsumptionMeteringData1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeGasConsumptionMeteringData1
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeGasConsumptionMeteringData2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeGasConsumptionMeteringData2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasErrorDetectionOfMeteringData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasErrorDetectionOfMeteringData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSecurityData1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasSecurityData1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSecurityData2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasSecurityData2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCenterValueShutOffStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasCenterValueShutOffStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCenterValueShutOffRecoveryPermissionSettingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasCenterValueShutOffRecoveryPermissionSettingStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasEmergencyValueShutOffStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasEmergencyValueShutOffStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasShutOffValueOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasShutOffValueOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasResidualVolumeControlWarning
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasResidualVolumeControlWarning
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasResidualVolumeControlWarningLevel1Value
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasResidualVolumeControlWarningLevel1Value
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasResidualVolumeControlWarningLevel2Value
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasResidualVolumeControlWarningLevel2Value
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasResidualVolumeControlWarningLevel3Value
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasResidualVolumeControlWarningLevel3Value
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSlightLeakTimerValueGasFlowContinuation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasSlightLeakTimerValueGasFlowContinuation
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSlightLeakTimerValueWithoutPressureInscrease
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasSlightLeakTimerValueWithoutPressureInscrease
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasShutOffReasonLog
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasShutOffReasonLog
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMaximumValueOfSupplyPressureData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMaximumValueOfSupplyPressureData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumValueOfSupplyPressureData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMinimumValueOfSupplyPressureData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCurrentValueOfSupplyPressureData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCurrentValueOfSupplyPressureData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMaximumValueOfBlockPressureData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMaximumValueOfBlockPressureData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumValueOfBlockPressureData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMinimumValueOfBlockPressureData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCurrentValueOfBlockPressureData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCurrentValueOfBlockPressureData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNumberOfBlockSupplyPressureErrorDays_Time
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasNumberOfBlockSupplyPressureErrorDays_Time
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTestCallSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasTestCallSetting
    ] .
ns:hasShutOffValueOpenCloseStatus rdfs:domain ns:LPGasMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasTestCallSetting rdfs:domain ns:LPGasMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeGasConsumptionMeteringData2 rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMaximumValueOfBlockPressureData rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeGasConsumptionMeteringData1 rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasResidualVolumeControlWarning rdfs:domain ns:LPGasMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSecurityData2 rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSecurityData1 rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasShutOffReasonLog rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSlightLeakTimerValueWithoutPressureInscrease rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMaximumValueOfSupplyPressureData rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCurrentValueOfBlockPressureData rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMinimumValueOfBlockPressureData rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasErrorDetectionOfMeteringData rdfs:domain ns:LPGasMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasNumberOfBlockSupplyPressureErrorDays_Time rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCenterValueShutOffRecoveryPermissionSettingStatus rdfs:domain ns:LPGasMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCurrentValueOfSupplyPressureData rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasResidualVolumeControlWarningLevel2Value rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCenterValueShutOffStatus rdfs:domain ns:LPGasMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMinimumValueOfSupplyPressureData rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasEmergencyValueShutOffStatus rdfs:domain ns:LPGasMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSlightLeakTimerValueGasFlowContinuation rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasResidualVolumeControlWarningLevel3Value rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasResidualVolumeControlWarningLevel1Value rdfs:domain ns:LPGasMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:CondensationSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "CondensationSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCondensationStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasCondensationStatus
    ] .
ns:hasDectectionThresholdLevel rdfs:domain ns:CondensationSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCondensationStatus rdfs:domain ns:CondensationSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:WaterFlowmetter rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "WaterFlowMeter"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterFlowMetterClassification
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:TypeClassificationValue ;
      :onProperty ns:hasWaterFlowMetterClassification
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOwnerClassification
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:TypeClassificationValue ;
      :onProperty ns:hasOwnerClassification
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeFlowingWaterAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeFlowingWaterAmount
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeFlowingWaterAmountUnit
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMeasuredCummulativeFlowingWaterAmountUnit
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeFlowingWaterAmountHistoricalData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeFlowingWaterAmountHistoricalData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDetectionOfAbnormalValueInMetterData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasDetectionOfAbnormalValueInMetterData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSecurityDataInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasSecurityDataInformation
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIDNumberSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasIDNumberSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVerificationExpirationInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasVerificationExpirationInformation
    ] .
ns:hasMeasuredCummulativeFlowingWaterAmount rdfs:domain ns:WaterFlowmetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDetectionOfAbnormalValueInMetterData rdfs:domain ns:WaterFlowmetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOwnerClassification rdfs:domain ns:WaterFlowmetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeFlowingWaterAmountUnit rdfs:domain ns:WaterFlowmetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSecurityDataInformation rdfs:domain ns:WaterFlowmetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasIDNumberSetting rdfs:domain ns:WaterFlowmetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWaterFlowMetterClassification rdfs:domain ns:WaterFlowmetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeFlowingWaterAmountHistoricalData rdfs:domain ns:WaterFlowmetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVerificationExpirationInformation rdfs:domain ns:WaterFlowmetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:CommercialShowcase rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "CommercialShowcase"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredDischargeTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredDischargeTemperature
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasGroupInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasGroupInformation
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasInternalLightingOperationStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasInternalLightingOperationStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCompressorOperationStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasCompressorOperationStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasExternalLightingOperationStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasExternalLightingOperationStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInternalTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInternalTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFreezingCapabilityValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasFreezingCapabilityValue
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDefrostingHeaterPowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasDefrostingHeaterPowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFanMotorPowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasFanMotorPowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOutsideTheCaseLightingType
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasOutsideTheCaseLightingType
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHeaterMode
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasHeaterMode
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasInsideTheShowcaseLightingType
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasInsideTheShowcaseLightingType
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasInsideTheShowcaseLightingIlluminanceLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasInsideTheShowcaseLightingIlluminanceLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOutsideTheCaseLightingIlluminanceLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasOutsideTheCaseLightingIlluminanceLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasInsideTheCaseTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasInsideTheCaseTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasShowCaseTypeInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasShowCaseTypeInformation
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDoorTypeInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasDoorTypeInformation
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasShowcaseConfigurationInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasShowcaseConfigurationInformation
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasShowcaseShapeInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasShowcaseShapeInformation
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasInsideTheCaseTemperatureRangeInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasInsideTheCaseTemperatureRangeInformation
    ] .
ns:hasDefrostingHeaterPowerConsumption rdfs:domain ns:CommercialShowcase ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHeaterMode rdfs:domain ns:CommercialShowcase ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasInsideTheShowcaseLightingIlluminanceLevel rdfs:domain ns:CommercialShowcase ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredDischargeTemperature rdfs:domain ns:CommercialShowcase ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasInsideTheShowcaseLightingType rdfs:domain ns:CommercialShowcase ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasShowcaseConfigurationInformation rdfs:domain ns:CommercialShowcase ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOutsideTheCaseLightingType rdfs:domain ns:CommercialShowcase ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredInternalTemperature rdfs:domain ns:CommercialShowcase ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasFanMotorPowerConsumption rdfs:domain ns:CommercialShowcase ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasShowcaseShapeInformation rdfs:domain ns:CommercialShowcase ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasExternalLightingOperationStatus rdfs:domain ns:CommercialShowcase ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFreezingCapabilityValue rdfs:domain ns:CommercialShowcase ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOutsideTheCaseLightingIlluminanceLevel rdfs:domain ns:CommercialShowcase ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasInsideTheCaseTemperatureSetting rdfs:domain ns:CommercialShowcase ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDoorTypeInformation rdfs:domain ns:CommercialShowcase ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasInsideTheCaseTemperatureRangeInformation rdfs:domain ns:CommercialShowcase ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOperationModeSetting rdfs:domain ns:CommercialShowcase ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasGroupInformation rdfs:domain ns:CommercialShowcase ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCompressorOperationStatus rdfs:domain ns:CommercialShowcase ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasInternalLightingOperationStatus rdfs:domain ns:CommercialShowcase ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasShowCaseTypeInformation rdfs:domain ns:CommercialShowcase ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:GasSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "GasSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasGasDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasGasDetectionStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredValueOfGasConcentration
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredValueOfGasConcentration
    ] .
ns:hasMeasuredValueOfGasConcentration rdfs:domain ns:GasSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDectectionThresholdLevel rdfs:domain ns:GasSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasGasDetectionStatus rdfs:domain ns:GasSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:GardenSprinkler rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "GardenSprinkler"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSprinkleValueOpenCloseSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasSprinkleValueOpenCloseSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSprinkleIntervalSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:IntervalSettingValue ;
      :onProperty ns:hasSprinkleIntervalSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNumberOfSprinkleSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:NumberOfSprinkleSettingValue ;
      :onProperty ns:hasNumberOfSprinkleSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSprinkleTimeSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasSprinkleTimeSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSprinkleTimeSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasSprinkleTimeSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSprinkleDurationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasSprinkleDurationSetting
    ] .
ns:hasSprinkleTimeSetting2 rdfs:domain ns:GardenSprinkler ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSprinkleValueOpenCloseSetting rdfs:domain ns:GardenSprinkler ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasNumberOfSprinkleSetting rdfs:domain ns:GardenSprinkler ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSprinkleTimeSetting1 rdfs:domain ns:GardenSprinkler ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSprinkleIntervalSetting rdfs:domain ns:GardenSprinkler ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSprinkleDurationSetting rdfs:domain ns:GardenSprinkler ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:SnowSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "SnowSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSnowDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasSnowDetectionStatus
    ] .
ns:hasSnowDetectionStatus rdfs:domain ns:SnowSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDectectionThresholdLevel rdfs:domain ns:SnowSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:EngineCogeneration rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "EngineCogeneration"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterTemperatureInWaterHeater
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasWaterTemperatureInWaterHeater
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedPowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedPowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHeatingValueOfHotWaterTank
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasHeatingValueOfHotWaterTank
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousPowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousPowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativePowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativePowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetMeasuredCumulativePowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:EngineCogeneration ;
      :onProperty ns:resetMeasuredCumulativePowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousGasConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousGasConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeGasConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeGasConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetMeasuredCumulativeGasConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:EngineCogeneration ;
      :onProperty ns:resetMeasuredCumulativeGasConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerGenerationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasPowerGenerationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerGenerationStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasPowerGenerationStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasInHouseMeasuredInstantaneousPowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasInHouseMeasuredInstantaneousPowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasInHouseMeasuredCumulativePowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasInHouseMeasuredCumulativePowerConsumption
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetInHouseMeasuredCumulativePowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:EngineCogeneration ;
      :onProperty ns:resetInHouseMeasuredCumulativePowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSystemInterconnectType
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasSystemInterconnectType
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredRemainingHotWaterAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredRemainingHotWaterAmount
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTankCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasTankCapacity
    ] .
ns:resetMeasuredCumulativeGasConsumption rdfs:domain ns:EngineCogeneration ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasPowerGenerationSetting rdfs:domain ns:EngineCogeneration ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousGasConsumption rdfs:domain ns:EngineCogeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedPowerGenerationOutput rdfs:domain ns:EngineCogeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:resetInHouseMeasuredCumulativePowerConsumption rdfs:domain ns:EngineCogeneration ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSystemInterconnectType rdfs:domain ns:EngineCogeneration ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:resetMeasuredCumulativePowerGenerationOutput rdfs:domain ns:EngineCogeneration ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasWaterTemperatureInWaterHeater rdfs:domain ns:EngineCogeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasInHouseMeasuredInstantaneousPowerConsumption rdfs:domain ns:EngineCogeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousPowerGenerationOutput rdfs:domain ns:EngineCogeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredRemainingHotWaterAmount rdfs:domain ns:EngineCogeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPowerGenerationStatus rdfs:domain ns:EngineCogeneration ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativePowerGenerationOutput rdfs:domain ns:EngineCogeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTankCapacity rdfs:domain ns:EngineCogeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHeatingValueOfHotWaterTank rdfs:domain ns:EngineCogeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasInHouseMeasuredCumulativePowerConsumption rdfs:domain ns:EngineCogeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeGasConsumption rdfs:domain ns:EngineCogeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:FlameSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "FlameSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFlameDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasFlameDetectionStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetFlameSensorFlameDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:FlameSensor ;
      :onProperty ns:resetFlameSensorFlameDetectionStatus
    ] .
ns:hasDectectionThresholdLevel rdfs:domain ns:FlameSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:resetFlameSensorFlameDetectionStatus rdfs:domain ns:FlameSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFlameDetectionStatus rdfs:domain ns:FlameSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:HouseHoldSolarPowerGeneration rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "HouseHoldSolarPowerGeneration"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSystemInterconnectType
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasSystemInterconnectType
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousElectricEnergyGeneratedAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredInstantaneousElectricEnergyGeneratedAmount
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergyGeneratedAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergyGeneratedAmount
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetMeasuredCummulativeElectricEnergyGeneratedAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:HouseHoldSolarPowerGeneration ;
      :onProperty ns:resetMeasuredCummulativeElectricEnergyGeneratedAmount
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergySoldAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeElectricEnergySoldAmount
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetMeasuredCummulativeElectricEnergySoldAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:HouseHoldSolarPowerGeneration ;
      :onProperty ns:resetMeasuredCummulativeElectricEnergySoldAmount
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerGenerationOutputLimitSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasPowerGenerationOutputLimitSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerGenerationOutputLimitSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasPowerGenerationOutputLimitSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAmountOfElectricitySoldLimitSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasAmountOfElectricitySoldLimitSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerGenerationOutputSystemInterconnected
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasPowerGenerationOutputSystemInterconnected
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerGenerationOutputSystemIndependent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasPowerGenerationOutputSystemIndependent
    ] .
ns:resetMeasuredCummulativeElectricEnergyGeneratedAmount rdfs:domain ns:HouseHoldSolarPowerGeneration ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasPowerGenerationOutputLimitSetting1 rdfs:domain ns:HouseHoldSolarPowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPowerGenerationOutputLimitSetting2 rdfs:domain ns:HouseHoldSolarPowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeElectricEnergySoldAmount rdfs:domain ns:HouseHoldSolarPowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPowerGenerationOutputSystemInterconnected rdfs:domain ns:HouseHoldSolarPowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasAmountOfElectricitySoldLimitSetting rdfs:domain ns:HouseHoldSolarPowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPowerGenerationOutputSystemIndependent rdfs:domain ns:HouseHoldSolarPowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:resetMeasuredCummulativeElectricEnergySoldAmount rdfs:domain ns:HouseHoldSolarPowerGeneration ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSystemInterconnectType rdfs:domain ns:HouseHoldSolarPowerGeneration ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeElectricEnergyGeneratedAmount rdfs:domain ns:HouseHoldSolarPowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousElectricEnergyGeneratedAmount rdfs:domain ns:HouseHoldSolarPowerGeneration ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:ElectricLeakSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ElectricLeakSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasElectricLeakOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasElectricLeakOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetElectricLeakOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ElectricLeakSensor ;
      :onProperty ns:resetElectricLeakOccurenceStatus
    ] .
ns:hasDectectionThresholdLevel rdfs:domain ns:ElectricLeakSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasElectricLeakOccurenceStatus rdfs:domain ns:ElectricLeakSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:resetElectricLeakOccurenceStatus rdfs:domain ns:ElectricLeakSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:ElectricRainSlidingShutter rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ElectricRainSlidingShutter"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFaultDescription
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:FaultDescriptionValue ;
      :onProperty ns:hasFaultDescription
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTimerOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasTimerOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasOperationTime
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpenCloseSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasOpenCloseSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDegreeOfOpeningLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasDegreeOfOpeningLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBlindAngleSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasBlindAngleSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpeningClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOpeningClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasElectricLockSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasElectricLockSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemoteOperationSettingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasRemoteOperationSettingStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSelectiveOpeningOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:SelectiveOpeningOperationSettingValue ;
      :onProperty ns:hasSelectiveOpeningOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSlitDegreeOfOpeningSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasSlitDegreeOfOpeningSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOneTimeOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOneTimeOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOneTimeClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOneTimeClosingSpeedSetting
    ] .
ns:hasOpenCloseSetting rdfs:domain ns:ElectricRainSlidingShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSelectiveOpeningOperationSetting rdfs:domain ns:ElectricRainSlidingShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpeningSpeedSetting rdfs:domain ns:ElectricRainSlidingShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRemoteOperationSettingStatus rdfs:domain ns:ElectricRainSlidingShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOneTimeOpeningSpeedSetting rdfs:domain ns:ElectricRainSlidingShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBlindAngleSetting rdfs:domain ns:ElectricRainSlidingShutter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasClosingSpeedSetting rdfs:domain ns:ElectricRainSlidingShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpenCloseStatus rdfs:domain ns:ElectricRainSlidingShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOperationTime rdfs:domain ns:ElectricRainSlidingShutter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSlitDegreeOfOpeningSetting rdfs:domain ns:ElectricRainSlidingShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDegreeOfOpeningLevel rdfs:domain ns:ElectricRainSlidingShutter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTimerOperationSetting rdfs:domain ns:ElectricRainSlidingShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasElectricLockSetting rdfs:domain ns:ElectricRainSlidingShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOneTimeClosingSpeedSetting rdfs:domain ns:ElectricRainSlidingShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFaultDescription rdfs:domain ns:ElectricRainSlidingShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpeningClosingSpeedSetting rdfs:domain ns:ElectricRainSlidingShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:StorageBattery rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "StorageBattery"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIdentificationNumber
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:IdentificationNumberValue ;
      :onProperty ns:hasIdentificationNumber
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCurrentDateSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasCurrentDateSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCurrentTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasCurrentTimeSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasACEffectiveCapacityCharging
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasACEffectiveCapacityCharging
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasACEffectiveCapacityDischarging
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasACEffectiveCapacityDischarging
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasACChargableCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasACChargableCapacity
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasACDischargableCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasACDischargableCapacity
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasACChargableElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasACChargableElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasACDischargableElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasACDischargableElectricEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasACChargeUpperLimitSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasACChargeUpperLimitSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasACDischargeLowerLimitSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasACDischargeLowerLimitSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasACMeasuredCumulativeDischargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasACMeasuredCumulativeDischargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasACChargeAmountSettingValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasACChargeAmountSettingValue
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasACDishargeAmountSettingValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasACDishargeAmountSettingValue
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumMaximumChargingElectricPower
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMinimumMaximumChargingElectricPower
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumMaximumDischargingElectricPower
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMinimumMaximumDischargingElectricPower
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumMaximumChargingCurrent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMinimumMaximumChargingCurrent
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumMaximumDischargingCurrent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMinimumMaximumDischargingCurrent
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasReInterconnectionPermissionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasReInterconnectionPermissionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationPermissionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOperationPermissionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIndependentOperationPermissionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasIndependentOperationPermissionSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWorkingOperationStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasWorkingOperationStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasACRatedElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasACRatedElectricEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedElectricEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedCapacity
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedVoltage
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedVoltage
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousChargingDischargingElectricPower
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousChargingDischargingElectricPower
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousChargingDischargingElectricCurrent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousChargingDischargingElectricCurrent
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousChargingDischargingElectricVoltage
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousChargingDischargingElectricVoltage
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetMeasuredCumulativeDischargingDischargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:StorageBattery ;
      :onProperty ns:resetMeasuredCumulativeDischargingDischargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasACMeasuredCumulativeChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasACMeasuredCumulativeChargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetMeasuredCumulativeChargingDischargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:StorageBattery ;
      :onProperty ns:resetMeasuredCumulativeChargingDischargingElectricEnergy
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSystemInterconnectType
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasSystemInterconnectType
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumMaximumChargingElectricPowerIndependent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMinimumMaximumChargingElectricPowerIndependent
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumMaximumDisChargingElectricPowerIndependent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMinimumMaximumDisChargingElectricPowerIndependent
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumMaximumChargingElectricCurrentIndependent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMinimumMaximumChargingElectricCurrentIndependent
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMinimumMaximumDisChargingElectricCurrentIndependent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMinimumMaximumDisChargingElectricCurrentIndependent
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChargingDischargingAmountSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasChargingDischargingAmountSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChargingDischargingAmountSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasChargingDischargingAmountSetting2
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemainingStoredElectric1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRemainingStoredElectric1
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemainingStoredElectric2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRemainingStoredElectric2
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemainingStoredElectric3
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRemainingStoredElectric3
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBatteryStateOfHealth
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasBatteryStateOfHealth
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBatteryType
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasBatteryType
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChargingAmountSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChargingAmountSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDischargingAmountSetting1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasDischargingAmountSetting1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChargingAmountSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChargingAmountSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDischargingAmountSetting2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasDischargingAmountSetting2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChargingElectricCurrentSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChargingElectricCurrentSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDischargingElectricCurrentSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasDischargingElectricCurrentSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedVoltageIndependent
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedVoltageIndependent
    ] .
ns:hasACChargableCapacity rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChargingAmountSetting1 rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousChargingDischargingElectricVoltage rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeChargingElectricEnergy rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBatteryStateOfHealth rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMinimumMaximumDisChargingElectricCurrentIndependent rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasACDischargeLowerLimitSetting rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMinimumMaximumChargingElectricPowerIndependent rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMinimumMaximumDischargingElectricPower rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOperationModeSetting rdfs:domain ns:StorageBattery ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasACDishargeAmountSettingValue rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasWorkingOperationStatus rdfs:domain ns:StorageBattery ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasChargingDischargingAmountSetting1 rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChargingDischargingAmountSetting2 rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChargingAmountSetting2 rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousChargingDischargingElectricCurrent rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChargingElectricCurrentSetting rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSystemInterconnectType rdfs:domain ns:StorageBattery ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasACMeasuredCumulativeDischargingElectricEnergy rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCurrentTimeSetting rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasACRatedElectricEnergy rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBatteryType rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasACEffectiveCapacityCharging rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousChargingDischargingElectricPower rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:resetMeasuredCumulativeDischargingDischargingElectricEnergy rdfs:domain ns:StorageBattery ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasACChargeUpperLimitSetting rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCurrentDateSetting rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedVoltageIndependent rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMinimumMaximumChargingCurrent rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedCapacity rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDischargingAmountSetting2 rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasACDischargableCapacity rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasACChargeAmountSettingValue rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasIndependentOperationPermissionSetting rdfs:domain ns:StorageBattery ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasACEffectiveCapacityDischarging rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasACDischargableElectricEnergy rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedVoltage rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:resetMeasuredCumulativeChargingDischargingElectricEnergy rdfs:domain ns:StorageBattery ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDischargingAmountSetting1 rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedElectricEnergy rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOperationPermissionSetting rdfs:domain ns:StorageBattery ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasIdentificationNumber rdfs:domain ns:StorageBattery ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMinimumMaximumDisChargingElectricPowerIndependent rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMinimumMaximumChargingElectricPower rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasACMeasuredCumulativeChargingElectricEnergy rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDischargingElectricCurrentSetting rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasReInterconnectionPermissionSetting rdfs:domain ns:StorageBattery ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMinimumMaximumChargingElectricCurrentIndependent rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMinimumMaximumDischargingCurrent rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasACChargableElectricEnergy rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRemainingStoredElectric2 rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRemainingStoredElectric1 rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRemainingStoredElectric3 rdfs:domain ns:StorageBattery ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:Television rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "Television"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDisplayControlSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasDisplayControlSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCharacterSettingAcceptanceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasCharacterSettingAcceptanceStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSupportedCharacterCodes
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasSupportedCharacterCodes
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCharacterStringToPresentToUser
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:CharacterCodes ;
      :onProperty ns:hasCharacterStringToPresentToUser
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAcceptedCharacterStringLength
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasAcceptedCharacterStringLength
    ] .
ns:hasSupportedCharacterCodes rdfs:domain ns:Television ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDisplayControlSetting rdfs:domain ns:Television ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCharacterStringToPresentToUser rdfs:domain ns:Television ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAcceptedCharacterStringLength rdfs:domain ns:Television ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCharacterSettingAcceptanceStatus rdfs:domain ns:Television ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:AirCleaner rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "AirCleaner"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFilterChangeNotice
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasFilterChangeNotice
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAirFlowRateSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasAirFlowRateSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSmokeDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasSmokeDetectionStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpticalCatalystOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOpticalCatalystOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAirPollutionDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasAirPollutionDetectionStatus
    ] .
ns:hasAirFlowRateSetting rdfs:domain ns:AirCleaner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAirPollutionDetectionStatus rdfs:domain ns:AirCleaner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFilterChangeNotice rdfs:domain ns:AirCleaner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSmokeDetectionStatus rdfs:domain ns:AirCleaner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpticalCatalystOperationSetting rdfs:domain ns:AirCleaner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:CombinationMicrowaveOven rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "CombinationMicrowaveOven"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDoorOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasDoorOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHeatingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasHeatingStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHeatingSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasHeatingSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHeatingModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasHeatingModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAutomaticHeatingSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasAutomaticHeatingSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAutomaticHeatingLevelSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasAutomaticHeatingLevelSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAutomaticHeatingMenuSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:AutomaticHeatingMenu ;
      :onProperty ns:hasAutomaticHeatingMenuSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOvenModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasOvenModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOvenPreheatingSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOvenPreheatingSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFermentingModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasFermentingModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChamperTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasChamperTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFoodTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasFoodTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHeatingSettingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasHeatingSettingTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemainingHeatingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRemainingHeatingTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMicrowaveHeatingPowerSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMicrowaveHeatingPowerSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPromptMessageSettingSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasPromptMessageSettingSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAccessoriestoCombinationMicrowaveOvenSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasAccessoriestoCombinationMicrowaveOvenSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDisplayCharacterStringSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasDisplayCharacterStringSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTwoStageMicrowaveHeatingDuration
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasTwoStageMicrowaveHeatingDuration
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTwoStageMicrowaveHeatingPower
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasTwoStageMicrowaveHeatingPower
    ] .
ns:hasHeatingModeSetting rdfs:domain ns:CombinationMicrowaveOven ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAccessoriestoCombinationMicrowaveOvenSetting rdfs:domain ns:CombinationMicrowaveOven ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHeatingSettingTime rdfs:domain ns:CombinationMicrowaveOven ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasAutomaticHeatingMenuSetting rdfs:domain ns:CombinationMicrowaveOven ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOvenModeSetting rdfs:domain ns:CombinationMicrowaveOven ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDoorOpenCloseStatus rdfs:domain ns:CombinationMicrowaveOven ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRemainingHeatingTime rdfs:domain ns:CombinationMicrowaveOven ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTwoStageMicrowaveHeatingDuration rdfs:domain ns:CombinationMicrowaveOven ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHeatingStatus rdfs:domain ns:CombinationMicrowaveOven ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAutomaticHeatingLevelSetting rdfs:domain ns:CombinationMicrowaveOven ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFoodTemperatureSetting rdfs:domain ns:CombinationMicrowaveOven ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOvenPreheatingSetting rdfs:domain ns:CombinationMicrowaveOven ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMicrowaveHeatingPowerSetting rdfs:domain ns:CombinationMicrowaveOven ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHeatingSetting rdfs:domain ns:CombinationMicrowaveOven ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasChamperTemperatureSetting rdfs:domain ns:CombinationMicrowaveOven ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDisplayCharacterStringSetting rdfs:domain ns:CombinationMicrowaveOven ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPromptMessageSettingSetting rdfs:domain ns:CombinationMicrowaveOven ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasAutomaticHeatingSetting rdfs:domain ns:CombinationMicrowaveOven ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFermentingModeSetting rdfs:domain ns:CombinationMicrowaveOven ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasTwoStageMicrowaveHeatingPower rdfs:domain ns:CombinationMicrowaveOven ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:CookingHeater rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "CookingHeater"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHeatingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasHeatingStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHeatingSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasHeatingSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:setAllStop
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:CookingHeater ;
      :onProperty ns:setAllStop
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHeatingPowerSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasHeatingPowerSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHeatingTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasHeatingTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasStoveHeatingModesSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasStoveHeatingModesSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOffTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOffTimerSettingRelativeTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasChildLockSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasChildLockSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRadiantHeaterLockSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasRadiantHeaterLockSetting
    ] .
ns:setAllStop rdfs:domain ns:CookingHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasHeatingTemperatureSetting rdfs:domain ns:CookingHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHeatingSetting rdfs:domain ns:CookingHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasStoveHeatingModesSetting rdfs:domain ns:CookingHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOffTimerSettingRelativeTime rdfs:domain ns:CookingHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasChildLockSetting rdfs:domain ns:CookingHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasHeatingPowerSetting rdfs:domain ns:CookingHeater ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRadiantHeaterLockSetting rdfs:domain ns:CookingHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasHeatingStatus rdfs:domain ns:CookingHeater ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:WeighingMachine rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "WeighingMachine"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredBodyWeight
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredBodyWeight
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredBodyFat
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredBodyFat
    ] .
ns:hasMeasuredBodyFat rdfs:domain ns:WeighingMachine ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredBodyWeight rdfs:domain ns:WeighingMachine ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:SmartKeroseneMetter rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "SmartKeroseneMeter"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOwnerClassification
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:TypeClassificationValue ;
      :onProperty ns:hasOwnerClassification
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeKeroseneConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeKeroseneConsumption
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeKeroseneConsumptionUnit
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMeasuredCumulativeKeroseneConsumptionUnit
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeKeroseneConsumptionHistoricalData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeKeroseneConsumptionHistoricalData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCollectionDataSettingForHistoryCumulativeKeroseneConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCollectionDataSettingForHistoryCumulativeKeroseneConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDetectionOfAbnormalValueInMetterData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasDetectionOfAbnormalValueInMetterData
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSecurityDataInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasSecurityDataInformation
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasResidualVolumeControlWarningLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasResidualVolumeControlWarningLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasResidualVolumeControlWarningLevel1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasResidualVolumeControlWarningLevel1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasResidualVolumeControlWarningLevel2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasResidualVolumeControlWarningLevel2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasResidualVolumeControlWarningLevel3
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasResidualVolumeControlWarningLevel3
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSlightLeakTimerValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasSlightLeakTimerValue
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIDNumberSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasIDNumberSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVerificationExpirationInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasVerificationExpirationInformation
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeKeroseneConsumptionInformationStringTimeIncluded
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeKeroseneConsumptionInformationStringTimeIncluded
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativeKeroseneConsumptionHistoricalInformationStringTimeIncluded
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativeKeroseneConsumptionHistoricalInformationStringTimeIncluded
    ] .
ns:hasMeasuredCumulativeKeroseneConsumptionHistoricalInformationStringTimeIncluded rdfs:domain ns:SmartKeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeKeroseneConsumptionUnit rdfs:domain ns:SmartKeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeKeroseneConsumptionHistoricalData rdfs:domain ns:SmartKeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasIDNumberSetting rdfs:domain ns:SmartKeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeKeroseneConsumption rdfs:domain ns:SmartKeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDetectionOfAbnormalValueInMetterData rdfs:domain ns:SmartKeroseneMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOwnerClassification rdfs:domain ns:SmartKeroseneMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasResidualVolumeControlWarningLevel3 rdfs:domain ns:SmartKeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasResidualVolumeControlWarningLevel rdfs:domain ns:SmartKeroseneMetter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasResidualVolumeControlWarningLevel2 rdfs:domain ns:SmartKeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasResidualVolumeControlWarningLevel1 rdfs:domain ns:SmartKeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativeKeroseneConsumptionInformationStringTimeIncluded rdfs:domain ns:SmartKeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSecurityDataInformation rdfs:domain ns:SmartKeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSlightLeakTimerValue rdfs:domain ns:SmartKeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCollectionDataSettingForHistoryCumulativeKeroseneConsumption rdfs:domain ns:SmartKeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasVerificationExpirationInformation rdfs:domain ns:SmartKeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:ThresholdLevelValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ThresholdLevelValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:minumumLevel
    ns:level1
    ns:level2
    ns:level3
    ns:level4
    ns:level5
    ns:level6
    ns:Level7
    ns:level8
    ns:level9
    ns:level10
    ns:level11
    ns:level12
    ns:level13
    ns:level14
    ns:level15
    ns:maximumLevel
    ns:high
    ns:medium
    ns:low
    ns:automaticControl
    ns:standard
    ns:continousOperation
    ns:intermittentOperation
  ) .
ns:level6 a ns:ThresholdLevelValue .
ns:automaticControl a ns:ThresholdLevelValue .
ns:level5 a ns:ThresholdLevelValue .
ns:level4 a ns:ThresholdLevelValue .
ns:level3 a ns:ThresholdLevelValue .
ns:level2 a ns:ThresholdLevelValue .
ns:Level7 a ns:ThresholdLevelValue .
ns:level1 a ns:ThresholdLevelValue .
ns:level11 a ns:ThresholdLevelValue .
ns:low a ns:ThresholdLevelValue .
ns:level10 a ns:ThresholdLevelValue .
ns:minumumLevel a ns:ThresholdLevelValue .
ns:standard a ns:ThresholdLevelValue .
ns:level9 a ns:ThresholdLevelValue .
ns:level8 a ns:ThresholdLevelValue .
ns:high a ns:ThresholdLevelValue .
ns:intermittentOperation a ns:ThresholdLevelValue .
ns:level13 a ns:ThresholdLevelValue .
ns:maximumLevel a ns:ThresholdLevelValue .
ns:level12 a ns:ThresholdLevelValue .
ns:level15 a ns:ThresholdLevelValue .
ns:level14 a ns:ThresholdLevelValue .
ns:continousOperation a ns:ThresholdLevelValue .
ns:medium a ns:ThresholdLevelValue .
ns:RadiationMethodValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "RadiationMethodValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:withFan
    ns:withoutFan
  ) .
ns:withoutFan a ns:RadiationMethodValue .
ns:withFan a ns:RadiationMethodValue .
ns:GasLeakSensor rdfs:comment "Gas Leak Sensor"^^xsd:string ;
  a :Class ;
  rdfs:label "GasLeakSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasGasLeakOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasGasLeakOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetGasLeakOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:GasLeakSensor ;
      :onProperty ns:resetGasLeakOccurenceStatus
    ] .
ns:hasDectectionThresholdLevel rdfs:domain ns:GasLeakSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasGasLeakOccurenceStatus rdfs:domain ns:GasLeakSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:resetGasLeakOccurenceStatus rdfs:domain ns:GasLeakSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:GeneralLighting rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "GeneralLight"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIlluminanceLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasIlluminanceLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLightingColorSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ColorValue ;
      :onProperty ns:hasLightingColorSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIlluminanceLevelStepSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasIlluminanceLevelStepSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLightColorStepSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasLightColorStepSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMaximumSpecifiableValues
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMaximumSpecifiableValues
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMaximumSetableLevelForNightLightingValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMaximumSetableLevelForNightLightingValue
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLightingModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasLightingModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIlluminanceLevelForMainLighting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasIlluminanceLevelForMainLighting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIlluminanceLevelStepSettingForMainLighting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasIlluminanceLevelStepSettingForMainLighting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIlluminanceLevelStepSettingForNightLighting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasIlluminanceLevelStepSettingForNightLighting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIlluminanceLevelForNightLighting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasIlluminanceLevelForNightLighting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLightColorSettingForMainLighting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ColorValue ;
      :onProperty ns:hasLightColorSettingForMainLighting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLightColorLevelStepSettingForMainLighting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasLightColorLevelStepSettingForMainLighting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLightColorSettingForNightLighting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ColorValue ;
      :onProperty ns:hasLightColorSettingForNightLighting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLightColorLevelStepSettingForNightLighting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasLightColorLevelStepSettingForNightLighting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasLightingModeStatusInAutoMode
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasLightingModeStatusInAutoMode
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRGBSettingForColorLighting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRGBSettingForColorLighting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOnTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOnTimerSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOnTimerSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOffTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOffTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOffTimerSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOffTimerSetting
    ] .
ns:hasOffTimerReservationSetting rdfs:domain ns:GeneralLighting ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasLightColorSettingForMainLighting rdfs:domain ns:GeneralLighting ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasIlluminanceLevelStepSetting rdfs:domain ns:GeneralLighting ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasLightingModeStatusInAutoMode rdfs:domain ns:GeneralLighting ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasIlluminanceLevelStepSettingForNightLighting rdfs:domain ns:GeneralLighting ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOffTimerSetting rdfs:domain ns:GeneralLighting ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasLightingColorSetting rdfs:domain ns:GeneralLighting ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMaximumSetableLevelForNightLightingValue rdfs:domain ns:GeneralLighting ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasLightColorLevelStepSettingForNightLighting rdfs:domain ns:GeneralLighting ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasLightColorStepSetting rdfs:domain ns:GeneralLighting ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasIlluminanceLevelStepSettingForMainLighting rdfs:domain ns:GeneralLighting ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasIlluminanceLevel rdfs:domain ns:GeneralLighting ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerReservationSetting rdfs:domain ns:GeneralLighting ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMaximumSpecifiableValues rdfs:domain ns:GeneralLighting ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasLightColorSettingForNightLighting rdfs:domain ns:GeneralLighting ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasLightingModeSetting rdfs:domain ns:GeneralLighting ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasIlluminanceLevelForNightLighting rdfs:domain ns:GeneralLighting ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasIlluminanceLevelForMainLighting rdfs:domain ns:GeneralLighting ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOnTimerSetting rdfs:domain ns:GeneralLighting ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRGBSettingForColorLighting rdfs:domain ns:GeneralLighting ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasLightColorLevelStepSettingForMainLighting rdfs:domain ns:GeneralLighting ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:HomeAirConditioner rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "HomeAirConditioner"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerSavingOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasPowerSavingOperationSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAutomaticTemperatureControlSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasAutomaticTemperatureControlSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTypeOfOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasTypeOfOperationSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCurrentSettingOfTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCurrentSettingOfTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRelativeHumidityInDehumidificationMode
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasRelativeHumidityInDehumidificationMode
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSettingTemperatureInCoolingMode
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasSettingTemperatureInCoolingMode
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSettingTemperatureInHeatingMode
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasSettingTemperatureInHeatingMode
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSettingTemperatureInDehumidificationMode
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasSettingTemperatureInDehumidificationMode
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedPowerConsumptionInModes
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasRatedPowerConsumptionInModes
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCurrentConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCurrentConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredRoomHumidity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredRoomHumidity
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredRoomTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredRoomTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCurrentTemperatureSettingOfRemoteControl
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasCurrentTemperatureSettingOfRemoteControl
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCooledAirTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCooledAirTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredOutdoorAirTemperature
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredOutdoorAirTemperature
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRelativeTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRelativeTemperatureSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAirFlowRateSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasAirFlowRateSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAutomacticControlOfAirFlowDirectionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasAutomacticControlOfAirFlowDirectionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAutomacticSwingOfAirFlowSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasAutomacticSwingOfAirFlowSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAirFlowVerticalDirectionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:AirFlowDirectionSettingValue ;
      :onProperty ns:hasAirFlowVerticalDirectionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAirFlowHorizontalDirectionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:AirFlowDirectionSettingValue ;
      :onProperty ns:hasAirFlowHorizontalDirectionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSpecialState
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasSpecialState
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNonPriorityState
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasNonPriorityState
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVentilationFunctionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasVentilationFunctionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHumidifierFunctionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasHumidifierFunctionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVentilationAirFlowRateSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasVentilationAirFlowRateSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDegreeOfHumidificationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDegreeOfHumidificationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMountedAirCleaningMethod
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMountedAirCleaningMethod
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMountedAirPurifierFunctionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMountedAirPurifierFunctionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMountedAirRefresherFunctionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMountedAirRefresherFunctionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMountedAirRefreshMethod
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMountedAirRefreshMethod
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMountedSelfCleaningMethod
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMountedSelfCleaningMethod
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMountedSelfCleaningFunctionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasMountedSelfCleaningFunctionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSpecialFunctionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasSpecialFunctionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationStatusOfComponents
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOperationStatusOfComponents
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasThermostatSettingOverrideFunction
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasThermostatSettingOverrideFunction
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPurificationModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasPurificationModeSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBuzzer
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:HomeAirConditioner ;
      :onProperty ns:hasBuzzer
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasONTimerBasedReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasONTimerBasedReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasONTimerTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasONTimerTimeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasONTimerRelativeTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasONTimerRelativeTimeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOFFTimerBasedReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasOFFTimerBasedReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOFFTimerTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOFFTimerTimeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOFFTimerRelativeTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOFFTimerRelativeTimeSetting
    ] .
ns:hasCurrentSettingOfTemperature rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasAirFlowRateSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAutomacticSwingOfAirFlowSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSettingTemperatureInDehumidificationMode rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMountedAirPurifierFunctionSetting rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOperationStatusOfComponents rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasAutomacticControlOfAirFlowDirectionSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSettingTemperatureInCoolingMode rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOFFTimerBasedReservationSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasVentilationAirFlowRateSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOFFTimerRelativeTimeSetting rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMountedSelfCleaningFunctionSetting rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCurrentConsumption rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasAirFlowHorizontalDirectionSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOperationModeSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredOutdoorAirTemperature rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCooledAirTemperature rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasNonPriorityState rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasONTimerRelativeTimeSetting rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasONTimerBasedReservationSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasPowerSavingOperationSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasPurificationModeSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOFFTimerTimeSetting rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRelativeHumidityInDehumidificationMode rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRelativeTemperatureSetting rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSpecialState rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasVentilationFunctionSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDegreeOfHumidificationSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSettingTemperatureInHeatingMode rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasAutomaticTemperatureControlSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSpecialFunctionSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBuzzer rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasONTimerTimeSetting rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredRoomTemperature rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMountedAirCleaningMethod rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMountedAirRefreshMethod rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasThermostatSettingOverrideFunction rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTypeOfOperationSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasCurrentTemperatureSettingOfRemoteControl rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedPowerConsumptionInModes rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredRoomHumidity rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMountedSelfCleaningMethod rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHumidifierFunctionSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMountedAirRefresherFunctionSetting rdfs:domain ns:HomeAirConditioner ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasAirFlowVerticalDirectionSetting rdfs:domain ns:HomeAirConditioner ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:ActivityMountSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ActivityMountSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasActivityMountLevel1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasActivityMountLevel1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMaxNumberofHumanBodyID
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMaxNumberofHumanBodyID
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasActivityMountLevel2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasActivityMountLevel2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHumanBodyExistenceInfor
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasHumanBodyExistenceInfor
    ] .
ns:hasMaxNumberofHumanBodyID rdfs:domain ns:ActivityMountSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHumanBodyExistenceInfor rdfs:domain ns:ActivityMountSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasActivityMountLevel1 rdfs:domain ns:ActivityMountSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasActivityMountLevel2 rdfs:domain ns:ActivityMountSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:WaterOverflowSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "WaterOverflowSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterOverflowDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasWaterOverflowDetectionStatus
    ] .
ns:hasDectectionThresholdLevel rdfs:domain ns:WaterOverflowSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasWaterOverflowDetectionStatus rdfs:domain ns:WaterOverflowSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:SmokeSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "SmokeSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSmokeDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasSmokeDetectionStatus
    ] .
ns:hasDectectionThresholdLevel rdfs:domain ns:SmokeSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSmokeDetectionStatus rdfs:domain ns:SmokeSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:FireSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "FireSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFireOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasFireOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetFireOccurenceStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:FireSensor ;
      :onProperty ns:resetFireOccurenceStatus
    ] .
ns:resetFireOccurenceStatus rdfs:domain ns:FireSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDectectionThresholdLevel rdfs:domain ns:FireSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFireOccurenceStatus rdfs:domain ns:FireSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:IntervalSettingValue rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "IntervalSettingValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:off
    ns:daily
    ns:everyOtherDay
    ns:every3Day
    ns:onceAWeek
  ) .
ns:off a ns:IntervalSettingValue .
ns:everyOtherDay a ns:IntervalSettingValue .
ns:onceAWeek a ns:IntervalSettingValue .
ns:every3Day a ns:IntervalSettingValue .
ns:daily a ns:IntervalSettingValue .
ns:FuelCell rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "FuelCell"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredWaterTemperatureInWaterHeaterMode
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredWaterTemperatureInWaterHeaterMode
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRatedPowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasRatedPowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHeatingValueOfHotWaterStorageTank
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasHeatingValueOfHotWaterStorageTank
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousPowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousPowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativePowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativePowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetMeasuredCummulativePowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:FuelCell ;
      :onProperty ns:resetMeasuredCummulativePowerGenerationOutput
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousGasConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInstantaneousGasConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeGasConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeGasConsumption
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetMeasuredCummulativeGasConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:FuelCell ;
      :onProperty ns:resetMeasuredCummulativeGasConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerGenerationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasPowerGenerationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerGenerationState
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasPowerGenerationState
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInHouseInstantaneousPowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInHouseInstantaneousPowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInHouseCummulativePowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredInHouseCummulativePowerConsumption
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:resetMeasuredInHouseCummulativePowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:FuelCell ;
      :onProperty ns:resetMeasuredInHouseCummulativePowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSystemInterconnectType
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasSystemInterconnectType
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredRemainingHotWaterAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredRemainingHotWaterAmount
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTankCapacity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasTankCapacity
    ] .
ns:hasPowerGenerationSetting rdfs:domain ns:FuelCell ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousGasConsumption rdfs:domain ns:FuelCell ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPowerGenerationState rdfs:domain ns:FuelCell ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasHeatingValueOfHotWaterStorageTank rdfs:domain ns:FuelCell ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRatedPowerGenerationOutput rdfs:domain ns:FuelCell ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredWaterTemperatureInWaterHeaterMode rdfs:domain ns:FuelCell ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSystemInterconnectType rdfs:domain ns:FuelCell ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredInHouseCummulativePowerConsumption rdfs:domain ns:FuelCell ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:resetMeasuredInHouseCummulativePowerConsumption rdfs:domain ns:FuelCell ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousPowerGenerationOutput rdfs:domain ns:FuelCell ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:resetMeasuredCummulativeGasConsumption rdfs:domain ns:FuelCell ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredInHouseInstantaneousPowerConsumption rdfs:domain ns:FuelCell ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativePowerGenerationOutput rdfs:domain ns:FuelCell ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:resetMeasuredCummulativePowerGenerationOutput rdfs:domain ns:FuelCell ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredRemainingHotWaterAmount rdfs:domain ns:FuelCell ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTankCapacity rdfs:domain ns:FuelCell ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeGasConsumption rdfs:domain ns:FuelCell ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:Humidifier rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "Humidifier"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRelativeHumidifyingSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:HumidifyingLevelValue ;
      :onProperty ns:hasRelativeHumidifyingSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHumidifyingLevelSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:HumidifyingLevelValue ;
      :onProperty ns:hasHumidifyingLevelSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredRoomHumidity
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredRoomHumidity
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOFFTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOFFTimerReservationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOFFTimerReservationRelativeTimeValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasOFFTimerReservationRelativeTimeValue
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIonEmissionSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasIonEmissionSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasImplementedIonEmissionMethod
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:IonEmissionMethodValue ;
      :onProperty ns:hasImplementedIonEmissionMethod
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSpecialOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasSpecialOperationModeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasWaterAmountLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:LiquidAmountLevelValue ;
      :onProperty ns:hasWaterAmountLevel
    ] .
ns:hasIonEmissionSetting rdfs:domain ns:Humidifier ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRelativeHumidifyingSetting rdfs:domain ns:Humidifier ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSpecialOperationModeSetting rdfs:domain ns:Humidifier ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasImplementedIonEmissionMethod rdfs:domain ns:Humidifier ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOFFTimerReservationRelativeTimeValue rdfs:domain ns:Humidifier ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredRoomHumidity rdfs:domain ns:Humidifier ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasOFFTimerReservationSetting rdfs:domain ns:Humidifier ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasWaterAmountLevel rdfs:domain ns:Humidifier ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasHumidifyingLevelSetting rdfs:domain ns:Humidifier ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:CharacterCodes rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "CharacterCodes"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:ansi_X3Dot4
    ns:shift_JIS
    ns:jis
    ns:japanEUC
    ns:ucs4
    ns:ansi_X3Dot4
    ns:latin1
    ns:utf8
  ) .
ns:shift_JIS a ns:CharacterCodes .
ns:japanEUC a ns:CharacterCodes .
ns:jis a ns:CharacterCodes .
ns:utf8 a ns:CharacterCodes .
ns:ucs4 a ns:CharacterCodes .
ns:ansi_X3Dot4 a ns:CharacterCodes .
ns:latin1 a ns:CharacterCodes .
ns:Switch rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "Switch"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasConnectedDevice
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasConnectedDevice
    ] .
ns:hasConnectedDevice rdfs:domain ns:Switch ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:EchonetSuperDevice rdfs:comment "Super device class"^^xsd:string ;
  a :Class ;
  rdfs:label "EchonetSuperDevice"^^xsd:string ;
  rdfs:subClassOf <http://ontology.universAAL.org/PhThing.owl#Device> ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasNodeIPAddress
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasNodeIPAddress
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasGroupCode
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasGroupCode
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasClassCode
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasClassCode
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasInstanceCode
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasInstanceCode
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasOperationStatus
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasInstallationLocation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:InstallationLocationValue ;
      :onProperty ns:hasInstallationLocation
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasStandardVersionInformation
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasStandardVersionInformation
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasIdentificationNumber
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:IdentificationNumberValue ;
      :onProperty ns:hasIdentificationNumber
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredInstantaneousPowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredInstantaneousPowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCumulativePowerConsumption
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCumulativePowerConsumption
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasManufactureFaultCode
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasManufactureFaultCode
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCurrentLimitSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasCurrentLimitSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFaultStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasFaultStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFaultDescription
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:FaultDescriptionValue ;
      :onProperty ns:hasFaultDescription
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasManufactureCode
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasManufactureCode
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBusinessFacilityCode
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasBusinessFacilityCode
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasProductCode
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasProductCode
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasProductionNumber
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasProductionNumber
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasProductionDate
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasProductionDate
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerSavingOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationModeSettingValue ;
      :onProperty ns:hasPowerSavingOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemoteControlSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:RemoteControlSettingValue ;
      :onProperty ns:hasRemoteControlSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCurrentTimeSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasCurrentTimeSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCurrentDateSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasCurrentDateSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasPowerLimitSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasPowerLimitSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasCumulativeOperatingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasCumulativeOperatingTime
    ] .
ns:hasPowerLimitSetting rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCumulativeOperatingTime rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCurrentDateSetting rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasManufactureCode rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasFaultStatus rdfs:domain ns:EchonetSuperDevice ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasGroupCode rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRemoteControlSetting rdfs:domain ns:EchonetSuperDevice ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasNodeIPAddress rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasInstanceCode rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasProductionDate rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasFaultDescription rdfs:domain ns:EchonetSuperDevice ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOperationStatus rdfs:domain ns:EchonetSuperDevice ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasIdentificationNumber rdfs:domain ns:EchonetSuperDevice ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasMeasuredInstantaneousPowerConsumption rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCurrentLimitSetting rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasProductionNumber rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasPowerSavingOperationSetting rdfs:domain ns:EchonetSuperDevice ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasClassCode rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCumulativePowerConsumption rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasProductCode rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasStandardVersionInformation rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasCurrentTimeSetting rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasBusinessFacilityCode rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasInstallationLocation rdfs:domain ns:EchonetSuperDevice ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasManufactureFaultCode rdfs:domain ns:EchonetSuperDevice ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:KeroseneMetter rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "KeroseneMeter"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeKeroseneConsumptionAmount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeKeroseneConsumptionAmount
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredCummulativeKeroseneConsumptionHistoricalData
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredCummulativeKeroseneConsumptionHistoricalData
    ] .
ns:hasMeasuredCummulativeKeroseneConsumptionHistoricalData rdfs:domain ns:KeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasMeasuredCummulativeKeroseneConsumptionAmount rdfs:domain ns:KeroseneMetter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:IdentificationNumberValue rdfs:comment "EPC:x83"^^xsd:string ;
  a :Class ;
  rdfs:label "IdentificationNumberValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:lowerLayerCommunicationProtocol
    ns:powerLineCommunicationProtocol_A_D
    ns:lowPowerRadioCommunicationProtocol
    ns:extendedHBS
    ns:irDA
    ns:lonTalk
    ns:bluetooth
    ns:ethernet
    ns:ieee802_11_11B
    ns:powerLineCommunicationProtocol_C
    ns:ipV6_6LoWPAN
    ns:manufacturerDefinedProtocol
    ns:ipV6_Ethernet
    ns:randomlyGeneratedProtocol
    ns:identificationNotSet
  ) .
ns:bluetooth a ns:IdentificationNumberValue .
ns:irDA a ns:IdentificationNumberValue .
ns:lonTalk a ns:IdentificationNumberValue .
ns:extendedHBS a ns:IdentificationNumberValue .
ns:ipV6_6LoWPAN a ns:IdentificationNumberValue .
ns:ipV6_Ethernet a ns:IdentificationNumberValue .
ns:ieee802_11_11B a ns:IdentificationNumberValue .
ns:ethernet a ns:IdentificationNumberValue .
ns:powerLineCommunicationProtocol_C a ns:IdentificationNumberValue .
ns:lowerLayerCommunicationProtocol a ns:IdentificationNumberValue .
ns:manufacturerDefinedProtocol a ns:IdentificationNumberValue .
ns:powerLineCommunicationProtocol_A_D a ns:IdentificationNumberValue .
ns:lowPowerRadioCommunicationProtocol a ns:IdentificationNumberValue .
ns:identificationNotSet a ns:IdentificationNumberValue .
ns:randomlyGeneratedProtocol a ns:IdentificationNumberValue .
ns:MicromotionSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "MicromotionSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasDetectionStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDetectionCounter
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasDetectionCounter
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSamplingCount
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasSamplingCount
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSamplingCycle
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasSamplingCycle
    ] .
ns:hasSamplingCycle rdfs:domain ns:MicromotionSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDectectionThresholdLevel rdfs:domain ns:MicromotionSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDetectionStatus rdfs:domain ns:MicromotionSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSamplingCount rdfs:domain ns:MicromotionSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasDetectionCounter rdfs:domain ns:MicromotionSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:InstallationLocationValue rdfs:comment "EPC:x81"^^xsd:string ;
  a :Class ;
  rdfs:label "InstallationLocationValue"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:livingRoom
    ns:dinningRoom
    ns:kitchen
    ns:bathroom
    ns:lavatory
    ns:washroom_ChangingRoom
    ns:passageway
    ns:room
    ns:stairway
    ns:frontDoor
    ns:storeroom
    ns:garden_Perimeter
    ns:garare
    ns:veranda_Balcony
    ns:others
    ns:freeDefinition
    ns:installationLocationNotSpecified
    ns:installationLocationIndefinited
  ) .
ns:installationLocationIndefinited a ns:InstallationLocationValue .
ns:storeroom a ns:InstallationLocationValue .
ns:washroom_ChangingRoom a ns:InstallationLocationValue .
ns:stairway a ns:InstallationLocationValue .
ns:installationLocationNotSpecified a ns:InstallationLocationValue .
ns:garden_Perimeter a ns:InstallationLocationValue .
ns:others a ns:InstallationLocationValue .
ns:passageway a ns:InstallationLocationValue .
ns:room a ns:InstallationLocationValue .
ns:veranda_Balcony a ns:InstallationLocationValue .
ns:bathroom a ns:InstallationLocationValue .
ns:lavatory a ns:InstallationLocationValue .
ns:dinningRoom a ns:InstallationLocationValue .
ns:garare a ns:InstallationLocationValue .
ns:kitchen a ns:InstallationLocationValue .
ns:frontDoor a ns:InstallationLocationValue .
ns:freeDefinition a ns:InstallationLocationValue .
ns:livingRoom a ns:InstallationLocationValue .
ns:PowerConsumptionRange rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "PowerConsumptionRange"^^xsd:string ;
  rdfs:subClassOf pvn:ManagedIndividual ;
  :oneOf (
    ns:undefined
    ns:rangeUpTo50W
    ns:range50W_100W
    ns:range100W_150W
    ns:range150W_200W
    ns:rangeOver_200W
  ) .
ns:range150W_200W a ns:PowerConsumptionRange .
ns:undefined a ns:PowerConsumptionRange .
ns:range100W_150W a ns:PowerConsumptionRange .
ns:rangeOver_200W a ns:PowerConsumptionRange .
ns:rangeUpTo50W a ns:PowerConsumptionRange .
ns:range50W_100W a ns:PowerConsumptionRange .
ns:VisitorSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "VisitorSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVisitorDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasVisitorDetectionStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasVisitorDetectionHoldingTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasVisitorDetectionHoldingTime
    ] .
ns:hasDectectionThresholdLevel rdfs:domain ns:VisitorSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasVisitorDetectionStatus rdfs:domain ns:VisitorSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasVisitorDetectionHoldingTime rdfs:domain ns:VisitorSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:HumanDetectionSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "HumanDetectionSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasDectectionThresholdLevel
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHumanDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasHumanDetectionStatus
    ] .
ns:hasHumanDetectionStatus rdfs:domain ns:HumanDetectionSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDectectionThresholdLevel rdfs:domain ns:HumanDetectionSensor ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:HumanBodyLocationSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "HumanBodyLocationSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHumanBodyDetectionLocation1
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasHumanBodyDetectionLocation1
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMaxNumberofHumanBodyID
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMaxNumberofHumanBodyID
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHumanBodyDetectionLocation2
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasHumanBodyDetectionLocation2
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasHumanBodyExistenceInfor
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:string ;
      :onProperty ns:hasHumanBodyExistenceInfor
    ] .
ns:hasMaxNumberofHumanBodyID rdfs:domain ns:HumanBodyLocationSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHumanBodyExistenceInfor rdfs:domain ns:HumanBodyLocationSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHumanBodyDetectionLocation2 rdfs:domain ns:HumanBodyLocationSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasHumanBodyDetectionLocation1 rdfs:domain ns:HumanBodyLocationSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:ElectricWindow rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ElectricWindow"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFaultDescription
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:FaultDescriptionValue ;
      :onProperty ns:hasFaultDescription
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTimerOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasTimerOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRegisteredTemperatureDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasRegisteredTemperatureDetectionStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRainDetectionStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OccurenceStatus ;
      :onProperty ns:hasRainDetectionStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasOperationTime
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasAutomaticOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasAutomaticOperationSetting
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpenCloseSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasOpenCloseSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDegreeOfOpeningLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasDegreeOfOpeningLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpeningClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOpeningClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasElectricLockSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasElectricLockSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemoteOperationSettingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasRemoteOperationSettingStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSelectiveOpeningOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:SelectiveOpeningOperationSettingValue ;
      :onProperty ns:hasSelectiveOpeningOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOneTimeOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOneTimeOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOneTimeClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOneTimeClosingSpeedSetting
    ] .
ns:hasOpenCloseSetting rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSelectiveOpeningOperationSetting rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpeningSpeedSetting rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRemoteOperationSettingStatus rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOneTimeOpeningSpeedSetting rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasClosingSpeedSetting rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpenCloseStatus rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOperationTime rdfs:domain ns:ElectricWindow ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasRainDetectionStatus rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDegreeOfOpeningLevel rdfs:domain ns:ElectricWindow ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTimerOperationSetting rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasAutomaticOperationSetting rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRegisteredTemperatureDetectionStatus rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasElectricLockSetting rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOneTimeClosingSpeedSetting rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFaultDescription rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpeningClosingSpeedSetting rdfs:domain ns:ElectricWindow ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:AirPressureSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "AirPressureSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredAirPressure
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:float ;
      :onProperty ns:hasMeasuredAirPressure
    ] .
ns:hasMeasuredAirPressure rdfs:domain ns:AirPressureSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:PressureSensor rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "PressureSensor"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasMeasuredDiffirentialPressureValue
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasMeasuredDiffirentialPressureValue
    ] .
ns:hasMeasuredDiffirentialPressureValue rdfs:domain ns:PressureSensor ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:ElectricShutter rdfs:comment ""^^xsd:string ;
  a :Class ;
  rdfs:label "ElectricShuttler"^^xsd:string ;
  rdfs:subClassOf ns:EchonetSuperDevice ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasFaultDescription
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:FaultDescriptionValue ;
      :onProperty ns:hasFaultDescription
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasTimerOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasTimerOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOperationTime
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasOperationTime
    ] ,
    [
      a :Restriction ;
      :cardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpenCloseSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationFuntionSettingValue ;
      :onProperty ns:hasOpenCloseSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasDegreeOfOpeningLevel
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasDegreeOfOpeningLevel
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasBlindAngleSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom xsd:int ;
      :onProperty ns:hasBlindAngleSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpenCloseSpeed
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOpenCloseSpeed
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasElectricLockSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasElectricLockSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasRemoteOperationSettingStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStatusValue ;
      :onProperty ns:hasRemoteOperationSettingStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSelectiveOpeningOperationSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:SelectiveOpeningOperationSettingValue ;
      :onProperty ns:hasSelectiveOpeningOperationSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:OperationStateSettingValue ;
      :onProperty ns:hasOpenCloseStatus
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasSlitDegreeOfOpeningSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasSlitDegreeOfOpeningSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOneTimeOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOneTimeOpeningSpeedSetting
    ] ,
    [
      a :Restriction ;
      :maxCardinality "1"^^xsd:nonNegativeInteger ;
      :onProperty ns:hasOneTimeClosingSpeedSetting
    ] ,
    [
      a :Restriction ;
      :allValuesFrom ns:ThresholdLevelValue ;
      :onProperty ns:hasOneTimeClosingSpeedSetting
    ] .
ns:hasOpenCloseSetting rdfs:domain ns:ElectricShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasSelectiveOpeningOperationSetting rdfs:domain ns:ElectricShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpeningSpeedSetting rdfs:domain ns:ElectricShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasRemoteOperationSettingStatus rdfs:domain ns:ElectricShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOneTimeOpeningSpeedSetting rdfs:domain ns:ElectricShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasBlindAngleSetting rdfs:domain ns:ElectricShutter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasClosingSpeedSetting rdfs:domain ns:ElectricShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpenCloseStatus rdfs:domain ns:ElectricShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOperationTime rdfs:domain ns:ElectricShutter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasSlitDegreeOfOpeningSetting rdfs:domain ns:ElectricShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasDegreeOfOpeningLevel rdfs:domain ns:ElectricShutter ;
  a :DatatypeProperty ,
    :FunctionalProperty .
ns:hasTimerOperationSetting rdfs:domain ns:ElectricShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasElectricLockSetting rdfs:domain ns:ElectricShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOneTimeClosingSpeedSetting rdfs:domain ns:ElectricShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasFaultDescription rdfs:domain ns:ElectricShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
ns:hasOpenCloseSpeed rdfs:domain ns:ElectricShutter ;
  a :ObjectProperty ,
    :FunctionalProperty .
